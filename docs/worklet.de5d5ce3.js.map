{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCgEA,EAAA,MAAA,CAAA,EAAA,wBAAA,IAAa,G,I,E,E,mCA3Db,IAAM,EAAgB,CAAC,CAAE,UAAA,EAAY,EAAG,CAAE,IACxC,IAAI,EAAa,CAAA,EACjB,MAAO,CAAC,CACN,QAAA,CAAO,CACP,aAAA,CAAY,CACZ,OAAA,CAAM,CACN,cAAA,CAAa,CACb,SAAA,CAAQ,CAOT,IACC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,IAAK,CACvC,IAAM,EAAQ,CAAO,CAAC,EAAE,CACpB,GAAS,GAAa,CAAC,IACzB,MAAA,GAAA,IACA,EAAa,CAAA,GAEX,EAAQ,GAAa,IACvB,MAAA,GAAA,IACA,EAAa,CAAA,EAEhB,CACG,EACF,MAAA,GAAA,IAEA,MAAA,GAAA,GAEJ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","sources":["<anon>","packages/base-nodes/src/audioNodes/dataRecorder/worklet.ts","node_modules/.pnpm/@swc+helpers@0.5.8/node_modules/@swc/helpers/esm/_define_property.js","node_modules/.pnpm/@parcel+transformer-js@2.12.0_@parcel+core@2.12.0/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"lid17\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/* / should be extracted to lib */ parcelHelpers.export(exports, \"DataRecorderProcessor\", ()=>DataRecorderProcessor);\nvar _defineProperty = require(\"@swc/helpers/_/_define_property\");\nconst GATE_THRESHOLD = 0.5;\n/* should be extracted to lib */ const createUseGate = ({ threshold = 0.5 })=>{\n    let isGateOpen = false;\n    return ({ channel, onBeforeOpen, onOpen, onAfterClosed, onClosed })=>{\n        for(let i = 0; i < channel.length; i++){\n            const value = channel[i];\n            if (value >= threshold && !isGateOpen) {\n                onBeforeOpen === null || onBeforeOpen === void 0 ? void 0 : onBeforeOpen();\n                isGateOpen = true;\n            }\n            if (value < threshold && isGateOpen) {\n                onAfterClosed === null || onAfterClosed === void 0 ? void 0 : onAfterClosed();\n                isGateOpen = false;\n            }\n        }\n        if (isGateOpen) onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n        else onClosed === null || onClosed === void 0 ? void 0 : onClosed();\n    };\n};\nconst duratinToTime = (duration)=>{\n    const m = Math.floor(duration / 60).toString().padStart(2, \"0\");\n    const s = Math.floor(duration % 60).toString().padStart(2, \"0\");\n    const ms = Math.floor(duration % 1 * 100).toString().padStart(2, \"0\");\n    return `${m}:${s}.${ms}`;\n};\nconst float32Concat = (first, second)=>{\n    var firstLength = first.length, result = new Float32Array(firstLength + second.length);\n    result.set(first);\n    result.set(second, firstLength);\n    return result;\n};\nclass DataRecorderProcessor extends AudioWorkletProcessor {\n    static get parameterDescriptors() {\n        return [\n            {\n                name: \"gate\",\n                automationRate: \"a-rate\",\n                defaultValue: 0,\n                minValue: 0,\n                maxValue: 1\n            }\n        ];\n    }\n    emitEvent(event) {\n        this.port.postMessage(event);\n    }\n    emitProgressEvent() {\n        if (!this.data) return;\n        const duration = currentTime - this.data.start;\n        this.emitEvent({\n            name: \"progress\",\n            data: duration,\n            time: duratinToTime(duration)\n        });\n    }\n    process(inputs, _outputs, parameters) {\n        const { gate } = parameters;\n        this.useGate({\n            channel: gate,\n            onBeforeOpen: ()=>{\n                this.data = this.generateData();\n                this.emitEvent({\n                    name: \"start\"\n                });\n            },\n            onOpen: ()=>{\n                this.emitProgressEvent();\n                if (!this.data) return;\n                for(let i = 0; i < this.data.channels.length; i++){\n                    var _inputs_i;\n                    var _inputs_i_;\n                    const inputChannel = (_inputs_i_ = (_inputs_i = inputs[i]) === null || _inputs_i === void 0 ? void 0 : _inputs_i[0]) !== null && _inputs_i_ !== void 0 ? _inputs_i_ : new Float32Array(128); //@TODO: move this 128 somewhere\n                    this.data.channels[i] = float32Concat(this.data.channels[i], inputChannel);\n                }\n            },\n            onClosed: ()=>{},\n            onAfterClosed: ()=>{\n                if (!this.data) return;\n                this.data.end = currentTime;\n                this.data.endTimestamp = +new Date();\n                this.data.endFrame = currentFrame;\n                this.emitEvent({\n                    name: \"stop\",\n                    data: this.data\n                });\n            }\n        });\n        return true;\n    }\n    constructor(...args){\n        super(...args);\n        (0, _defineProperty._)(this, \"data\", null);\n        (0, _defineProperty._)(this, \"useGate\", createUseGate({\n            threshold: GATE_THRESHOLD\n        }));\n        (0, _defineProperty._)(this, \"generateData\", ()=>({\n                sampleRate: sampleRate,\n                length: 0,\n                start: currentTime,\n                startTimestamp: +new Date(),\n                startFrame: currentFrame,\n                end: 0,\n                endTimestamp: 0,\n                endFrame: 0,\n                channels: [\n                    new Float32Array(),\n                    new Float32Array()\n                ]\n            }));\n    }\n}\ntry {\n    //@ts-ignore\n    registerProcessor(\"data-recorder-processor\", DataRecorderProcessor);\n} catch (e) {}\n\n},{\"@swc/helpers/_/_define_property\":\"ktYkZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"5zHCx\"}],\"ktYkZ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"_define_property\", ()=>_define_property);\nparcelHelpers.export(exports, \"_\", ()=>_define_property);\nfunction _define_property(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"5zHCx\"}],\"5zHCx\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"lid17\"], \"lid17\", \"parcelRequirec6d8\")\n\n//# sourceMappingURL=worklet.de5d5ce3.js.map\n","import type { RecorderData, PortEvent } from \"./types\";\n\nconst GATE_THRESHOLD = 0.5;\n\n/* should be extracted to lib */\nconst createUseGate = ({ threshold = 0.5 }) => {\n  let isGateOpen = false;\n  return ({\n    channel,\n    onBeforeOpen,\n    onOpen,\n    onAfterClosed,\n    onClosed,\n  }: {\n    channel: Float32Array;\n    onOpen?: () => void;\n    onClosed?: () => void;\n    onBeforeOpen?: () => void;\n    onAfterClosed?: () => void;\n  }) => {\n    for (let i = 0; i < channel.length; i++) {\n      const value = channel[i];\n      if (value >= threshold && !isGateOpen) {\n        onBeforeOpen?.();\n        isGateOpen = true;\n      }\n      if (value < threshold && isGateOpen) {\n        onAfterClosed?.();\n        isGateOpen = false;\n      }\n    }\n    if (isGateOpen) {\n      onOpen?.();\n    } else {\n      onClosed?.();\n    }\n  };\n};\n\nconst duratinToTime = (duration: number) => {\n  const m = Math.floor(duration / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const s = Math.floor(duration % 60)\n    .toString()\n    .padStart(2, \"0\");\n  const ms = Math.floor((duration % 1) * 100)\n    .toString()\n    .padStart(2, \"0\");\n\n  return `${m}:${s}.${ms}`;\n};\n\nconst float32Concat = (first: Float32Array, second: Float32Array) => {\n  var firstLength = first.length,\n    result = new Float32Array(firstLength + second.length);\n\n  result.set(first);\n  result.set(second, firstLength);\n\n  return result;\n};\n/* / should be extracted to lib */\n\nexport class DataRecorderProcessor extends AudioWorkletProcessor {\n  data: RecorderData | null = null;\n\n  useGate = createUseGate({ threshold: GATE_THRESHOLD });\n\n  static get parameterDescriptors() {\n    return [\n      {\n        name: \"gate\",\n        automationRate: \"a-rate\",\n        defaultValue: 0,\n        minValue: 0,\n        maxValue: 1,\n      },\n    ];\n  }\n\n  generateData = (): RecorderData => ({\n    sampleRate: sampleRate,\n    length: 0,\n    start: currentTime,\n    startTimestamp: +new Date(),\n    startFrame: currentFrame,\n    end: 0,\n    endTimestamp: 0,\n    endFrame: 0,\n    channels: [new Float32Array(), new Float32Array()],\n  });\n\n  emitEvent(event: PortEvent) {\n    this.port.postMessage(event);\n  }\n\n  emitProgressEvent() {\n    if (!this.data) {\n      return;\n    }\n    const duration = currentTime - this.data.start;\n    this.emitEvent({\n      name: \"progress\",\n      data: duration,\n      time: duratinToTime(duration),\n    });\n  }\n\n  process(\n    inputs: Float32Array[][],\n    _outputs: Float32Array[][],\n    parameters: {\n      gate: Float32Array;\n    },\n  ) {\n    const { gate } = parameters;\n\n    this.useGate({\n      channel: gate,\n      onBeforeOpen: () => {\n        this.data = this.generateData();\n        this.emitEvent({\n          name: \"start\",\n        });\n      },\n      onOpen: () => {\n        this.emitProgressEvent();\n        if (!this.data) {\n          return;\n        }\n        for (let i = 0; i < this.data.channels.length; i++) {\n          const inputChannel = inputs[i]?.[0] ?? new Float32Array(128); //@TODO: move this 128 somewhere\n          this.data.channels[i] = float32Concat(\n            this.data.channels[i],\n            inputChannel,\n          );\n        }\n      },\n      onClosed: () => {},\n      onAfterClosed: () => {\n        if (!this.data) {\n          return;\n        }\n        this.data.end = currentTime;\n        this.data.endTimestamp = +new Date();\n        this.data.endFrame = currentFrame;\n        this.emitEvent({\n          name: \"stop\",\n          data: this.data,\n        });\n      },\n    });\n\n    return true;\n  }\n}\n\ntry {\n  //@ts-ignore\n  registerProcessor(\"data-recorder-processor\", DataRecorderProcessor);\n} catch (e) {}\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","parcelHelpers","defineInteropFlag","export","DataRecorderProcessor","_defineProperty","createUseGate","threshold","isGateOpen","channel","onBeforeOpen","onOpen","onAfterClosed","onClosed","value","duratinToTime","duration","m","Math","floor","toString","padStart","s","ms","float32Concat","first","second","firstLength","result","Float32Array","set","AudioWorkletProcessor","parameterDescriptors","automationRate","defaultValue","minValue","maxValue","emitEvent","event","port","postMessage","emitProgressEvent","data","currentTime","start","time","process","inputs","_outputs","parameters","gate","useGate","generateData","channels","_inputs_i","_inputs_i_","inputChannel","end","endTimestamp","Date","endFrame","currentFrame","constructor","args","_","sampleRate","startTimestamp","startFrame","registerProcessor","e","_define_property","obj","key","enumerable","configurable","writable","interopDefault","a","__esModule","default","exportAll","source","dest","keys","forEach","prototype","hasOwnProperty","destName"],"version":3,"file":"worklet.de5d5ce3.js.map"}