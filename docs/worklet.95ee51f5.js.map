{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCWA,EAAA,MAAA,CAAA,EAAA,qBAAA,IAAa,GAXb,IAAM,EAAiB,CACrB,EACA,EACA,KAGA,IAAM,EAAQ,EADM,CAAA,KAAK,GAAG,CAAC,EAAG,EAAW,GAAK,CAAA,EAGhD,OAAO,KAAK,GAAG,CAAC,CAAC,EAAa,KAAK,GAAG,CAAC,EAAa,AAD7B,KAAK,KAAK,CAAC,EAAS,GAC0B,GACvE,CAEM,OAAO,UAA2B,sBACtC,WAAW,sBAAX,CACE,MAAO,CACL,CACE,KAAM,UACP,EACF,AACH,CAEA,QACE,CAAwB,CACxB,CAAyB,CACzB,CAAsC,CAHxC,CAKE,IAAM,EAAQ,CAAM,CAAC,EAAE,CACjB,EAAS,CAAO,CAAC,EAAE,CACnB,EAAW,EAAW,QAAQ,CAAC,EAAE,CAGvC,IAAK,IAAI,EAAU,EAAG,EAAU,EAAO,MAAM,CAAE,EAAE,EAAS,CACxD,IAAM,EAAe,CAAK,CAAC,EAAQ,CAEnC,GAAI,CAAC,EACH,SAGF,IAAM,EAAgB,CAAM,CAAC,EAAQ,CAErC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,MAAM,CAAE,EAAE,EAAG,CAC7C,IAAM,EAAiB,EACrB,CAAY,CAAC,EAAE,EAAI,EACnB,EAdc,EAiBhB,CAAA,CAAa,CAAC,EAAE,CAAG,CACpB,CACF,CAED,MAAO,CAAA,CACT,CACD,CAED,GAAI,CAEF,kBAAkB,sBAAuB,EAC1C,CAAC,MAAO,EAAG,CAAA,C,E,C,iD,O,E,C,Q,C,S,C,C,C,C,C,ECxDZ,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,C,Q,C,Q","sources":["<anon>","packages/base-nodes/src/Quantizer/worklet.ts","node_modules/.pnpm/@parcel+transformer-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"e1eQK\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"QuantizerProcessor\", ()=>QuantizerProcessor);\nconst quantizeSample = (sample, bitDepth, maxAbsValue)=>{\n    const maxIntValue = Math.pow(2, bitDepth - 1) - 1;\n    const scale = maxAbsValue / maxIntValue;\n    const quantizedValue = Math.round(sample / scale);\n    return Math.max(-maxAbsValue, Math.min(maxAbsValue, quantizedValue * scale));\n};\nclass QuantizerProcessor extends AudioWorkletProcessor {\n    static get parameterDescriptors() {\n        return [\n            {\n                name: \"bitDepth\"\n            }\n        ];\n    }\n    process(inputs, outputs, parameters) {\n        const input = inputs[0];\n        const output = outputs[0];\n        const bitDepth = parameters.bitDepth[0];\n        const maxAbsValue = 1.0; // Output range from -1 to 1\n        for(let channel = 0; channel < output.length; ++channel){\n            const inputChannel = input[channel];\n            if (!inputChannel) continue;\n            const outputChannel = output[channel];\n            for(let i = 0; i < outputChannel.length; ++i){\n                const quantizedValue = quantizeSample(inputChannel[i] ?? 0, bitDepth, maxAbsValue);\n                outputChannel[i] = quantizedValue;\n            }\n        }\n        return true;\n    }\n}\ntry {\n    //@ts-ignore\n    registerProcessor(\"quantizer-processor\", QuantizerProcessor);\n} catch (e) {}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"4w0m1\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[\"e1eQK\"], \"e1eQK\", \"parcelRequirec6d8\")\n\n//# sourceMappingURL=worklet.95ee51f5.js.map\n","const quantizeSample = (\n  sample: number,\n  bitDepth: number,\n  maxAbsValue: number,\n): number => {\n  const maxIntValue = Math.pow(2, bitDepth - 1) - 1;\n  const scale = maxAbsValue / maxIntValue;\n  const quantizedValue = Math.round(sample / scale);\n  return Math.max(-maxAbsValue, Math.min(maxAbsValue, quantizedValue * scale));\n};\n\nexport class QuantizerProcessor extends AudioWorkletProcessor {\n  static get parameterDescriptors() {\n    return [\n      {\n        name: \"bitDepth\",\n      },\n    ];\n  }\n\n  process(\n    inputs: [Float32Array[]],\n    outputs: [Float32Array[]],\n    parameters: { bitDepth: Float32Array },\n  ) {\n    const input = inputs[0];\n    const output = outputs[0];\n    const bitDepth = parameters.bitDepth[0];\n    const maxAbsValue = 1.0; // Output range from -1 to 1\n\n    for (let channel = 0; channel < output.length; ++channel) {\n      const inputChannel = input[channel];\n\n      if (!inputChannel) {\n        continue;\n      }\n\n      const outputChannel = output[channel];\n\n      for (let i = 0; i < outputChannel.length; ++i) {\n        const quantizedValue = quantizeSample(\n          inputChannel[i] ?? 0,\n          bitDepth,\n          maxAbsValue,\n        );\n        outputChannel[i] = quantizedValue;\n      }\n    }\n\n    return true;\n  }\n}\n\ntry {\n  //@ts-ignore\n  registerProcessor(\"quantizer-processor\", QuantizerProcessor);\n} catch (e) {}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","parcelHelpers","defineInteropFlag","export","QuantizerProcessor","quantizeSample","sample","bitDepth","maxAbsValue","scale","Math","pow","max","min","quantizedValue","round","AudioWorkletProcessor","parameterDescriptors","process","inputs","outputs","parameters","input","output","channel","inputChannel","outputChannel","registerProcessor","e","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"worklet.95ee51f5.js.map"}