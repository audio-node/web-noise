{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCOA,EAAA,MAAA,CAAA,EAAA,0BAAA,IAAa,GAPb,IAAA,EAAA,EAAA,WACA,EAAA,EAAA,gBAMM,OAAO,UAAgC,sBAC3C,YAAc,AAAA,CAAA,EAAA,EAAA,iBAAA,AAAA,GAAoB,AAElC,YAAW,sBAAX,CACE,MAAO,CACL,CACE,KAAM,AAAA,EAAA,sBAAsB,CAAC,MAAM,CACnC,SAAU,EACV,SAAU,AAAA,EAAA,aAAa,CAAC,MAAM,CAAG,CAClC,EACD,CAAE,KAAM,AAAA,EAAA,sBAAsB,CAAC,OAAO,AAAA,EACtC,CAAE,KAAM,AAAA,EAAA,sBAAsB,CAAC,OAAO,AAAA,EACvC,AACH,CAEA,QAAQ,CAAc,CAAE,CAAe,CAAE,CAAsB,CAA/D,CACE,GAAM,CAAC,EAAM,CAA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","sources":["<anon>","packages/base-nodes/src/FrequencyMeter/worklet.ts","packages/base-nodes/src/FrequencyMeter/types.ts","node_modules/.pnpm/@parcel+transformer-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","packages/base-nodes/src/FrequencyMeter/useGetPitch.ts","node_modules/.pnpm/aubiojs@0.2.1/node_modules/aubiojs/build/aubio.js","node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js","node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","node_modules/.pnpm/path-browserify@1.0.1/node_modules/path-browserify/index.js","node_modules/.pnpm/@parcel+node-resolver-core@3.3.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/node-resolver-core/lib/_empty.js","packages/base-nodes/src/lib/index.ts","packages/base-nodes/src/lib/useBuffer.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"j3gF1\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"FrequencyMeterProcessor\", ()=>FrequencyMeterProcessor);\nvar _types = require(\"./types\");\nvar _useGetPitch = require(\"./useGetPitch\");\nclass FrequencyMeterProcessor extends AudioWorkletProcessor {\n    useGetPitch = (0, _useGetPitch.createUseGetPitch)();\n    static get parameterDescriptors() {\n        return [\n            {\n                name: (0, _types.PitchWorkletParameters).method,\n                minValue: 0,\n                maxValue: (0, _useGetPitch.PITCH_METHODS).length - 1\n            },\n            {\n                name: (0, _types.PitchWorkletParameters).fftSize\n            },\n            {\n                name: (0, _types.PitchWorkletParameters).hopSize\n            }\n        ];\n    }\n    process(inputs, outputs, parameters) {\n        const [input] = inputs;\n        if (!input || !input.length) return true;\n        const getPitch = this.useGetPitch({\n            method: parameters[(0, _types.PitchWorkletParameters).method][0],\n            bufferSize: parameters[(0, _types.PitchWorkletParameters).fftSize][0],\n            hopSize: parameters[(0, _types.PitchWorkletParameters).hopSize][0],\n            sampleRate\n        });\n        if (!getPitch) return true;\n        const frequency = getPitch(input[0]);\n        outputs[0].forEach((channel)=>{\n            for(let index in channel)channel[index] = frequency;\n        });\n        return true;\n    }\n}\ntry {\n    //@ts-ignore\n    registerProcessor(\"frequency-meter-processor\", FrequencyMeterProcessor);\n} catch (e) {}\n\n},{\"./types\":\"9cigj\",\"./useGetPitch\":\"gZXBe\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"9cigj\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PitchWorkletParameters\", ()=>PitchWorkletParameters);\nvar PitchWorkletParameters;\n(function(PitchWorkletParameters) {\n    PitchWorkletParameters[\"method\"] = \"method\";\n    PitchWorkletParameters[\"fftSize\"] = \"fftSize\";\n    PitchWorkletParameters[\"hopSize\"] = \"hopSize\";\n})(PitchWorkletParameters || (PitchWorkletParameters = {}));\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"4w0m1\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}],\"gZXBe\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PitchMethod\", ()=>PitchMethod);\nparcelHelpers.export(exports, \"PITCH_METHODS\", ()=>PITCH_METHODS);\nparcelHelpers.export(exports, \"DEFAULT_PARAMS\", ()=>DEFAULT_PARAMS);\nparcelHelpers.export(exports, \"createUseGetPitch\", ()=>createUseGetPitch);\nvar _aubiojs = require(\"aubiojs\");\nvar _aubiojsDefault = parcelHelpers.interopDefault(_aubiojs);\nvar _lib = require(\"../lib\");\nconst DEFAULT_FFT_SIZE = 1024;\nvar PitchMethod;\n(function(PitchMethod) {\n    PitchMethod[\"default\"] = \"default\";\n    PitchMethod[\"yin\"] = \"yin\";\n    PitchMethod[\"mcomb\"] = \"mcomb\";\n    PitchMethod[\"schmitt\"] = \"schmitt\";\n    PitchMethod[\"fcomb\"] = \"fcomb\";\n    PitchMethod[\"yinfft\"] = \"yinfft\";\n    PitchMethod[\"yinfast\"] = \"yinfast\";\n    PitchMethod[\"specacf\"] = \"specacf\";\n})(PitchMethod || (PitchMethod = {}));\nconst PITCH_METHODS = Object.keys(PitchMethod);\nconst DEFAULT_PARAMS = {\n    method: 0,\n    bufferSize: DEFAULT_FFT_SIZE,\n    hopSize: DEFAULT_FFT_SIZE / 4,\n    sampleRate: 44100\n};\nconst createUseGetPitch = ()=>{\n    const current = {};\n    let Pitch;\n    (0, _aubiojsDefault.default)().then((instance)=>{\n        Pitch = instance.Pitch;\n    });\n    let useBuffer;\n    let getPitch = ()=>-1;\n    return ({ method, bufferSize, hopSize, sampleRate })=>{\n        if (!Pitch) return null;\n        const newParams = {\n            method: method ?? 0,\n            bufferSize: bufferSize <= 0 ? DEFAULT_PARAMS.bufferSize : bufferSize,\n            hopSize: hopSize <= 0 ? DEFAULT_PARAMS.hopSize : hopSize,\n            sampleRate\n        };\n        if (newParams.bufferSize !== current.bufferSize) useBuffer = (0, _lib.createUseBuffer)(newParams.bufferSize);\n        if (newParams.method !== current.method || newParams.bufferSize !== current.bufferSize || newParams.hopSize !== current.hopSize) {\n            const method = PITCH_METHODS[newParams.method];\n            const pitchProcessor = new Pitch(method, newParams.bufferSize, newParams.hopSize, sampleRate);\n            getPitch = (slice)=>{\n                const buffer = useBuffer(slice);\n                return pitchProcessor?.do(buffer) ?? 0;\n            };\n            Object.assign(current, newParams);\n        }\n        return getPitch;\n    };\n};\n\n},{\"aubiojs\":\"aOfBE\",\"../lib\":\"dPAKu\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"aOfBE\":[function(require,module,exports) {\nvar __filename = \"node_modules/.pnpm/aubiojs@0.2.1/node_modules/aubiojs/build/aubio.js\";\nvar process = require(\"e6cba795caef07b7\");\nvar __dirname = \"node_modules/.pnpm/aubiojs@0.2.1/node_modules/aubiojs/build\";\nvar Buffer = require(\"aced69c8dfaa35e9\").Buffer;\nvar aubio = function() {\n    var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : undefined;\n    if (typeof __filename !== \"undefined\") _scriptDir = _scriptDir || __filename;\n    return function(aubio) {\n        aubio = aubio || {};\n        var Module = typeof aubio !== \"undefined\" ? aubio : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for(key in Module)if (Module.hasOwnProperty(key)) moduleOverrides[key] = Module[key];\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n            throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n            if (Module[\"locateFile\"]) return Module[\"locateFile\"](path, scriptDirectory);\n            return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n            if (ENVIRONMENT_IS_WORKER) scriptDirectory = require(\"647d8d173dc78e\").dirname(scriptDirectory) + \"/\";\n            else scriptDirectory = __dirname + \"/\";\n            read_ = function shell_read(filename, binary) {\n                var ret = tryParseAsDataURI(filename);\n                if (ret) return binary ? ret : ret.toString();\n                if (!nodeFS) nodeFS = require(\"4bb428a4879a14c\");\n                if (!nodePath) nodePath = require(\"647d8d173dc78e\");\n                filename = nodePath[\"normalize\"](filename);\n                return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n            };\n            readBinary = function readBinary(filename) {\n                var ret = read_(filename, true);\n                if (!ret.buffer) ret = new Uint8Array(ret);\n                assert(ret.buffer);\n                return ret;\n            };\n            if (process[\"argv\"].length > 1) thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n            arguments_ = process[\"argv\"].slice(2);\n            process[\"on\"](\"uncaughtException\", function(ex) {\n                if (!(ex instanceof ExitStatus)) throw ex;\n            });\n            process[\"on\"](\"unhandledRejection\", abort);\n            quit_ = function(status) {\n                process[\"exit\"](status);\n            };\n            Module[\"inspect\"] = function() {\n                return \"[Emscripten Module object]\";\n            };\n        } else if (ENVIRONMENT_IS_SHELL) {\n            if (typeof read != \"undefined\") read_ = function shell_read(f) {\n                var data = tryParseAsDataURI(f);\n                if (data) return intArrayToString(data);\n                return read(f);\n            };\n            readBinary = function readBinary(f) {\n                var data;\n                data = tryParseAsDataURI(f);\n                if (data) return data;\n                if (typeof readbuffer === \"function\") return new Uint8Array(readbuffer(f));\n                data = read(f, \"binary\");\n                assert(typeof data === \"object\");\n                return data;\n            };\n            if (typeof scriptArgs != \"undefined\") arguments_ = scriptArgs;\n            else if (typeof arguments != \"undefined\") arguments_ = arguments;\n            if (typeof quit === \"function\") quit_ = function(status) {\n                quit(status);\n            };\n            if (typeof print !== \"undefined\") {\n                if (typeof console === \"undefined\") console = {};\n                console.log = print;\n                console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n            }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n            if (ENVIRONMENT_IS_WORKER) scriptDirectory = self.location.href;\n            else if (typeof document !== \"undefined\" && document.currentScript) scriptDirectory = document.currentScript.src;\n            if (_scriptDir) scriptDirectory = _scriptDir;\n            if (scriptDirectory.indexOf(\"blob:\") !== 0) scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n            else scriptDirectory = \"\";\n            read_ = function(url) {\n                try {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    xhr.send(null);\n                    return xhr.responseText;\n                } catch (err) {\n                    var data = tryParseAsDataURI(url);\n                    if (data) return intArrayToString(data);\n                    throw err;\n                }\n            };\n            if (ENVIRONMENT_IS_WORKER) readBinary = function(url) {\n                try {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.send(null);\n                    return new Uint8Array(xhr.response);\n                } catch (err) {\n                    var data = tryParseAsDataURI(url);\n                    if (data) return data;\n                    throw err;\n                }\n            };\n            readAsync = function(url, onload, onerror) {\n                var xhr = new XMLHttpRequest;\n                xhr.open(\"GET\", url, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onload = function() {\n                    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                        onload(xhr.response);\n                        return;\n                    }\n                    var data = tryParseAsDataURI(url);\n                    if (data) {\n                        onload(data.buffer);\n                        return;\n                    }\n                    onerror();\n                };\n                xhr.onerror = onerror;\n                xhr.send(null);\n            };\n            setWindowTitle = function(title) {\n                document.title = title;\n            };\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for(key in moduleOverrides)if (moduleOverrides.hasOwnProperty(key)) Module[key] = moduleOverrides[key];\n        moduleOverrides = null;\n        if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n            tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") abort(\"no native wasm support detected\");\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n            if (!condition) abort(\"Assertion failed: \" + text);\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n            var endIdx = idx + maxBytesToRead;\n            var endPtr = idx;\n            while(heap[endPtr] && !(endPtr >= endIdx))++endPtr;\n            if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n            else {\n                var str = \"\";\n                while(idx < endPtr){\n                    var u0 = heap[idx++];\n                    if (!(u0 & 128)) {\n                        str += String.fromCharCode(u0);\n                        continue;\n                    }\n                    var u1 = heap[idx++] & 63;\n                    if ((u0 & 224) == 192) {\n                        str += String.fromCharCode((u0 & 31) << 6 | u1);\n                        continue;\n                    }\n                    var u2 = heap[idx++] & 63;\n                    if ((u0 & 240) == 224) u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n                    else u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n                    if (u0 < 65536) str += String.fromCharCode(u0);\n                    else {\n                        var ch = u0 - 65536;\n                        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                    }\n                }\n            }\n            return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n            if (!(maxBytesToWrite > 0)) return 0;\n            var startIdx = outIdx;\n            var endIdx = outIdx + maxBytesToWrite - 1;\n            for(var i = 0; i < str.length; ++i){\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                    var u1 = str.charCodeAt(++i);\n                    u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n                }\n                if (u <= 127) {\n                    if (outIdx >= endIdx) break;\n                    heap[outIdx++] = u;\n                } else if (u <= 2047) {\n                    if (outIdx + 1 >= endIdx) break;\n                    heap[outIdx++] = 192 | u >> 6;\n                    heap[outIdx++] = 128 | u & 63;\n                } else if (u <= 65535) {\n                    if (outIdx + 2 >= endIdx) break;\n                    heap[outIdx++] = 224 | u >> 12;\n                    heap[outIdx++] = 128 | u >> 6 & 63;\n                    heap[outIdx++] = 128 | u & 63;\n                } else {\n                    if (outIdx + 3 >= endIdx) break;\n                    heap[outIdx++] = 240 | u >> 18;\n                    heap[outIdx++] = 128 | u >> 12 & 63;\n                    heap[outIdx++] = 128 | u >> 6 & 63;\n                    heap[outIdx++] = 128 | u & 63;\n                }\n            }\n            heap[outIdx] = 0;\n            return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n            return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n            var len = 0;\n            for(var i = 0; i < str.length; ++i){\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                if (u <= 127) ++len;\n                else if (u <= 2047) len += 2;\n                else if (u <= 65535) len += 3;\n                else len += 4;\n            }\n            return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n        function UTF16ToString(ptr, maxBytesToRead) {\n            var endPtr = ptr;\n            var idx = endPtr >> 1;\n            var maxIdx = idx + maxBytesToRead / 2;\n            while(!(idx >= maxIdx) && HEAPU16[idx])++idx;\n            endPtr = idx << 1;\n            if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n            else {\n                var str = \"\";\n                for(var i = 0; !(i >= maxBytesToRead / 2); ++i){\n                    var codeUnit = HEAP16[ptr + i * 2 >> 1];\n                    if (codeUnit == 0) break;\n                    str += String.fromCharCode(codeUnit);\n                }\n                return str;\n            }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n            if (maxBytesToWrite === undefined) maxBytesToWrite = 2147483647;\n            if (maxBytesToWrite < 2) return 0;\n            maxBytesToWrite -= 2;\n            var startPtr = outPtr;\n            var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n            for(var i = 0; i < numCharsToWrite; ++i){\n                var codeUnit = str.charCodeAt(i);\n                HEAP16[outPtr >> 1] = codeUnit;\n                outPtr += 2;\n            }\n            HEAP16[outPtr >> 1] = 0;\n            return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n            return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n            var i = 0;\n            var str = \"\";\n            while(!(i >= maxBytesToRead / 4)){\n                var utf32 = HEAP32[ptr + i * 4 >> 2];\n                if (utf32 == 0) break;\n                ++i;\n                if (utf32 >= 65536) {\n                    var ch = utf32 - 65536;\n                    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                } else str += String.fromCharCode(utf32);\n            }\n            return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n            if (maxBytesToWrite === undefined) maxBytesToWrite = 2147483647;\n            if (maxBytesToWrite < 4) return 0;\n            var startPtr = outPtr;\n            var endPtr = startPtr + maxBytesToWrite - 4;\n            for(var i = 0; i < str.length; ++i){\n                var codeUnit = str.charCodeAt(i);\n                if (codeUnit >= 55296 && codeUnit <= 57343) {\n                    var trailSurrogate = str.charCodeAt(++i);\n                    codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n                }\n                HEAP32[outPtr >> 2] = codeUnit;\n                outPtr += 4;\n                if (outPtr + 4 > endPtr) break;\n            }\n            HEAP32[outPtr >> 2] = 0;\n            return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n            var len = 0;\n            for(var i = 0; i < str.length; ++i){\n                var codeUnit = str.charCodeAt(i);\n                if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n                len += 4;\n            }\n            return len;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n            buffer = buf;\n            Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n            Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n            Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n            Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n            Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n            Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n            Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n            Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        function preRun() {\n            if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [\n                    Module[\"preRun\"]\n                ];\n                while(Module[\"preRun\"].length)addOnPreRun(Module[\"preRun\"].shift());\n            }\n            callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n            runtimeInitialized = true;\n            callRuntimeCallbacks(__ATINIT__);\n        }\n        function postRun() {\n            if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [\n                    Module[\"postRun\"]\n                ];\n                while(Module[\"postRun\"].length)addOnPostRun(Module[\"postRun\"].shift());\n            }\n            callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n            __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n            __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n            __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function addRunDependency(id) {\n            runDependencies++;\n            if (Module[\"monitorRunDependencies\"]) Module[\"monitorRunDependencies\"](runDependencies);\n        }\n        function removeRunDependency(id) {\n            runDependencies--;\n            if (Module[\"monitorRunDependencies\"]) Module[\"monitorRunDependencies\"](runDependencies);\n            if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                    clearInterval(runDependencyWatcher);\n                    runDependencyWatcher = null;\n                }\n                if (dependenciesFulfilled) {\n                    var callback = dependenciesFulfilled;\n                    dependenciesFulfilled = null;\n                    callback();\n                }\n            }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n            if (Module[\"onAbort\"]) Module[\"onAbort\"](what);\n            what += \"\";\n            err(what);\n            ABORT = true;\n            EXITSTATUS = 1;\n            what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n            var e = new WebAssembly.RuntimeError(what);\n            readyPromiseReject(e);\n            throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n            return filename.startsWith(dataURIPrefix);\n        }\n        function isFileURI(filename) {\n            return filename.startsWith(\"file://\");\n        }\n        var wasmBinaryFile = \"data:application/octet-stream;base64,\";\n        if (!isDataURI(wasmBinaryFile)) wasmBinaryFile = locateFile(wasmBinaryFile);\n        function getBinary(file) {\n            try {\n                if (file == wasmBinaryFile && wasmBinary) return new Uint8Array(wasmBinary);\n                var binary = tryParseAsDataURI(file);\n                if (binary) return binary;\n                if (readBinary) return readBinary(file);\n                else throw \"both async and sync fetching of the wasm failed\";\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise() {\n            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) return fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                }).then(function(response) {\n                    if (!response[\"ok\"]) throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                    return response[\"arrayBuffer\"]();\n                }).catch(function() {\n                    return getBinary(wasmBinaryFile);\n                });\n                else {\n                    if (readAsync) return new Promise(function(resolve, reject) {\n                        readAsync(wasmBinaryFile, function(response) {\n                            resolve(new Uint8Array(response));\n                        }, reject);\n                    });\n                }\n            }\n            return Promise.resolve().then(function() {\n                return getBinary(wasmBinaryFile);\n            });\n        }\n        function createWasm() {\n            var info = {\n                \"a\": asmLibraryArg\n            };\n            function receiveInstance(instance, module1) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                wasmMemory = Module[\"asm\"][\"w\"];\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                wasmTable = Module[\"asm\"][\"z\"];\n                addOnInit(Module[\"asm\"][\"x\"]);\n                removeRunDependency(\"wasm-instantiate\");\n            }\n            addRunDependency(\"wasm-instantiate\");\n            function receiveInstantiationResult(result) {\n                receiveInstance(result[\"instance\"]);\n            }\n            function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise().then(function(binary) {\n                    var result = WebAssembly.instantiate(binary, info);\n                    return result;\n                }).then(receiver, function(reason) {\n                    err(\"failed to asynchronously prepare wasm: \" + reason);\n                    abort(reason);\n                });\n            }\n            function instantiateAsync() {\n                if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") return fetch(wasmBinaryFile, {\n                    credentials: \"same-origin\"\n                }).then(function(response) {\n                    var result = WebAssembly.instantiateStreaming(response, info);\n                    return result.then(receiveInstantiationResult, function(reason) {\n                        err(\"wasm streaming compile failed: \" + reason);\n                        err(\"falling back to ArrayBuffer instantiation\");\n                        return instantiateArrayBuffer(receiveInstantiationResult);\n                    });\n                });\n                else return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n            if (Module[\"instantiateWasm\"]) try {\n                var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n                return exports;\n            } catch (e) {\n                err(\"Module.instantiateWasm callback failed with error: \" + e);\n                return false;\n            }\n            instantiateAsync().catch(readyPromiseReject);\n            return {};\n        }\n        function callRuntimeCallbacks(callbacks) {\n            while(callbacks.length > 0){\n                var callback = callbacks.shift();\n                if (typeof callback == \"function\") {\n                    callback(Module);\n                    continue;\n                }\n                var func = callback.func;\n                if (typeof func === \"number\") {\n                    if (callback.arg === undefined) wasmTable.get(func)();\n                    else wasmTable.get(func)(callback.arg);\n                } else func(callback.arg === undefined ? null : callback.arg);\n            }\n        }\n        function getShiftFromSize(size) {\n            switch(size){\n                case 1:\n                    return 0;\n                case 2:\n                    return 1;\n                case 4:\n                    return 2;\n                case 8:\n                    return 3;\n                default:\n                    throw new TypeError(\"Unknown type size: \" + size);\n            }\n        }\n        function embind_init_charCodes() {\n            var codes = new Array(256);\n            for(var i = 0; i < 256; ++i)codes[i] = String.fromCharCode(i);\n            embind_charCodes = codes;\n        }\n        var embind_charCodes = undefined;\n        function readLatin1String(ptr) {\n            var ret = \"\";\n            var c = ptr;\n            while(HEAPU8[c])ret += embind_charCodes[HEAPU8[c++]];\n            return ret;\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name) {\n            if (undefined === name) return \"_unknown\";\n            name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n            var f = name.charCodeAt(0);\n            if (f >= char_0 && f <= char_9) return \"_\" + name;\n            else return name;\n        }\n        function createNamedFunction(name, body) {\n            name = makeLegalFunctionName(name);\n            return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n        }\n        function extendError(baseErrorType, errorName) {\n            var errorClass = createNamedFunction(errorName, function(message) {\n                this.name = errorName;\n                this.message = message;\n                var stack = new Error(message).stack;\n                if (stack !== undefined) this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            });\n            errorClass.prototype = Object.create(baseErrorType.prototype);\n            errorClass.prototype.constructor = errorClass;\n            errorClass.prototype.toString = function() {\n                if (this.message === undefined) return this.name;\n                else return this.name + \": \" + this.message;\n            };\n            return errorClass;\n        }\n        var BindingError = undefined;\n        function throwBindingError(message) {\n            throw new BindingError(message);\n        }\n        var InternalError = undefined;\n        function throwInternalError(message) {\n            throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n            myTypes.forEach(function(type) {\n                typeDependencies[type] = dependentTypes;\n            });\n            function onComplete(typeConverters) {\n                var myTypeConverters = getTypeConverters(typeConverters);\n                if (myTypeConverters.length !== myTypes.length) throwInternalError(\"Mismatched type converter count\");\n                for(var i = 0; i < myTypes.length; ++i)registerType(myTypes[i], myTypeConverters[i]);\n            }\n            var typeConverters = new Array(dependentTypes.length);\n            var unregisteredTypes = [];\n            var registered = 0;\n            dependentTypes.forEach(function(dt, i) {\n                if (registeredTypes.hasOwnProperty(dt)) typeConverters[i] = registeredTypes[dt];\n                else {\n                    unregisteredTypes.push(dt);\n                    if (!awaitingDependencies.hasOwnProperty(dt)) awaitingDependencies[dt] = [];\n                    awaitingDependencies[dt].push(function() {\n                        typeConverters[i] = registeredTypes[dt];\n                        ++registered;\n                        if (registered === unregisteredTypes.length) onComplete(typeConverters);\n                    });\n                }\n            });\n            if (0 === unregisteredTypes.length) onComplete(typeConverters);\n        }\n        function registerType(rawType, registeredInstance, options) {\n            options = options || {};\n            if (!(\"argPackAdvance\" in registeredInstance)) throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n            var name = registeredInstance.name;\n            if (!rawType) throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n            if (registeredTypes.hasOwnProperty(rawType)) {\n                if (options.ignoreDuplicateRegistrations) return;\n                else throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n            }\n            registeredTypes[rawType] = registeredInstance;\n            delete typeDependencies[rawType];\n            if (awaitingDependencies.hasOwnProperty(rawType)) {\n                var callbacks = awaitingDependencies[rawType];\n                delete awaitingDependencies[rawType];\n                callbacks.forEach(function(cb) {\n                    cb();\n                });\n            }\n        }\n        function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n            var shift = getShiftFromSize(size);\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(wt) {\n                    return !!wt;\n                },\n                \"toWireType\": function(destructors, o) {\n                    return o ? trueValue : falseValue;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": function(pointer) {\n                    var heap;\n                    if (size === 1) heap = HEAP8;\n                    else if (size === 2) heap = HEAP16;\n                    else if (size === 4) heap = HEAP32;\n                    else throw new TypeError(\"Unknown boolean type size: \" + name);\n                    return this[\"fromWireType\"](heap[pointer >> shift]);\n                },\n                destructorFunction: null\n            });\n        }\n        function ClassHandle_isAliasOf(other) {\n            if (!(this instanceof ClassHandle)) return false;\n            if (!(other instanceof ClassHandle)) return false;\n            var leftClass = this.$$.ptrType.registeredClass;\n            var left = this.$$.ptr;\n            var rightClass = other.$$.ptrType.registeredClass;\n            var right = other.$$.ptr;\n            while(leftClass.baseClass){\n                left = leftClass.upcast(left);\n                leftClass = leftClass.baseClass;\n            }\n            while(rightClass.baseClass){\n                right = rightClass.upcast(right);\n                rightClass = rightClass.baseClass;\n            }\n            return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n            return {\n                count: o.count,\n                deleteScheduled: o.deleteScheduled,\n                preservePointerOnDelete: o.preservePointerOnDelete,\n                ptr: o.ptr,\n                ptrType: o.ptrType,\n                smartPtr: o.smartPtr,\n                smartPtrType: o.smartPtrType\n            };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n            function getInstanceTypeName(handle) {\n                return handle.$$.ptrType.registeredClass.name;\n            }\n            throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {}\n        function runDestructor($$) {\n            if ($$.smartPtr) $$.smartPtrType.rawDestructor($$.smartPtr);\n            else $$.ptrType.registeredClass.rawDestructor($$.ptr);\n        }\n        function releaseClassHandle($$) {\n            $$.count.value -= 1;\n            var toDelete = 0 === $$.count.value;\n            if (toDelete) runDestructor($$);\n        }\n        function attachFinalizer(handle) {\n            if (\"undefined\" === typeof FinalizationGroup) {\n                attachFinalizer = function(handle) {\n                    return handle;\n                };\n                return handle;\n            }\n            finalizationGroup = new FinalizationGroup(function(iter) {\n                for(var result = iter.next(); !result.done; result = iter.next()){\n                    var $$ = result.value;\n                    if (!$$.ptr) console.warn(\"object already deleted: \" + $$.ptr);\n                    else releaseClassHandle($$);\n                }\n            });\n            attachFinalizer = function(handle) {\n                finalizationGroup.register(handle, handle.$$, handle.$$);\n                return handle;\n            };\n            detachFinalizer = function(handle) {\n                finalizationGroup.unregister(handle.$$);\n            };\n            return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.preservePointerOnDelete) {\n                this.$$.count.value += 1;\n                return this;\n            } else {\n                var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n                    $$: {\n                        value: shallowCopyInternalPointer(this.$$)\n                    }\n                }));\n                clone.$$.count.value += 1;\n                clone.$$.deleteScheduled = false;\n                return clone;\n            }\n        }\n        function ClassHandle_delete() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) throwBindingError(\"Object already scheduled for deletion\");\n            detachFinalizer(this);\n            releaseClassHandle(this.$$);\n            if (!this.$$.preservePointerOnDelete) {\n                this.$$.smartPtr = undefined;\n                this.$$.ptr = undefined;\n            }\n        }\n        function ClassHandle_isDeleted() {\n            return !this.$$.ptr;\n        }\n        var delayFunction = undefined;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n            while(deletionQueue.length){\n                var obj = deletionQueue.pop();\n                obj.$$.deleteScheduled = false;\n                obj[\"delete\"]();\n            }\n        }\n        function ClassHandle_deleteLater() {\n            if (!this.$$.ptr) throwInstanceAlreadyDeleted(this);\n            if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) throwBindingError(\"Object already scheduled for deletion\");\n            deletionQueue.push(this);\n            if (deletionQueue.length === 1 && delayFunction) delayFunction(flushPendingDeletes);\n            this.$$.deleteScheduled = true;\n            return this;\n        }\n        function init_ClassHandle() {\n            ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n            ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n            ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n            ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n            ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {}\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n            if (undefined === proto[methodName].overloadTable) {\n                var prevFunc = proto[methodName];\n                proto[methodName] = function() {\n                    if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n                    return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n                };\n                proto[methodName].overloadTable = [];\n                proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n            }\n        }\n        function exposePublicSymbol(name, value, numArguments) {\n            if (Module.hasOwnProperty(name)) {\n                if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n                ensureOverloadTable(Module, name, name);\n                if (Module.hasOwnProperty(numArguments)) throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n                Module[name].overloadTable[numArguments] = value;\n            } else {\n                Module[name] = value;\n                if (undefined !== numArguments) Module[name].numArguments = numArguments;\n            }\n        }\n        function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n            this.name = name;\n            this.constructor = constructor;\n            this.instancePrototype = instancePrototype;\n            this.rawDestructor = rawDestructor;\n            this.baseClass = baseClass;\n            this.getActualType = getActualType;\n            this.upcast = upcast;\n            this.downcast = downcast;\n            this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n            while(ptrClass !== desiredClass){\n                if (!ptrClass.upcast) throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n                ptr = ptrClass.upcast(ptr);\n                ptrClass = ptrClass.baseClass;\n            }\n            return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n            var ptr;\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                if (this.isSmartPointer) {\n                    ptr = this.rawConstructor();\n                    if (destructors !== null) destructors.push(this.rawDestructor, ptr);\n                    return ptr;\n                } else return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            if (!this.isConst && handle.$$.ptrType.isConst) throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            if (this.isSmartPointer) {\n                if (undefined === handle.$$.smartPtr) throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n                switch(this.sharingPolicy){\n                    case 0:\n                        if (handle.$$.smartPtrType === this) ptr = handle.$$.smartPtr;\n                        else throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                        break;\n                    case 1:\n                        ptr = handle.$$.smartPtr;\n                        break;\n                    case 2:\n                        if (handle.$$.smartPtrType === this) ptr = handle.$$.smartPtr;\n                        else {\n                            var clonedHandle = handle[\"clone\"]();\n                            ptr = this.rawShare(ptr, __emval_register(function() {\n                                clonedHandle[\"delete\"]();\n                            }));\n                            if (destructors !== null) destructors.push(this.rawDestructor, ptr);\n                        }\n                        break;\n                    default:\n                        throwBindingError(\"Unsupporting sharing policy\");\n                }\n            }\n            return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n            if (handle === null) {\n                if (this.isReference) throwBindingError(\"null is not a valid \" + this.name);\n                return 0;\n            }\n            if (!handle.$$) throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n            if (!handle.$$.ptr) throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n            if (handle.$$.ptrType.isConst) throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n            var handleClass = handle.$$.ptrType.registeredClass;\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n            return ptr;\n        }\n        function simpleReadValueFromPointer(pointer) {\n            return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n        }\n        function RegisteredPointer_getPointee(ptr) {\n            if (this.rawGetPointee) ptr = this.rawGetPointee(ptr);\n            return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n            if (this.rawDestructor) this.rawDestructor(ptr);\n        }\n        function RegisteredPointer_deleteObject(handle) {\n            if (handle !== null) handle[\"delete\"]();\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n            if (ptrClass === desiredClass) return ptr;\n            if (undefined === desiredClass.baseClass) return null;\n            var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n            if (rv === null) return null;\n            return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n            return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n            var rv = [];\n            for(var k in registeredInstances)if (registeredInstances.hasOwnProperty(k)) rv.push(registeredInstances[k]);\n            return rv;\n        }\n        function setDelayFunction(fn) {\n            delayFunction = fn;\n            if (deletionQueue.length && delayFunction) delayFunction(flushPendingDeletes);\n        }\n        function init_embind() {\n            Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n            Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n            Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n            Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n            if (ptr === undefined) throwBindingError(\"ptr should not be undefined\");\n            while(class_.baseClass){\n                ptr = class_.upcast(ptr);\n                class_ = class_.baseClass;\n            }\n            return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n            ptr = getBasestPointer(class_, ptr);\n            return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n            if (!record.ptrType || !record.ptr) throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n            var hasSmartPtrType = !!record.smartPtrType;\n            var hasSmartPtr = !!record.smartPtr;\n            if (hasSmartPtrType !== hasSmartPtr) throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n            record.count = {\n                value: 1\n            };\n            return attachFinalizer(Object.create(prototype, {\n                $$: {\n                    value: record\n                }\n            }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n            var rawPointer = this.getPointee(ptr);\n            if (!rawPointer) {\n                this.destructor(ptr);\n                return null;\n            }\n            var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n            if (undefined !== registeredInstance) {\n                if (0 === registeredInstance.$$.count.value) {\n                    registeredInstance.$$.ptr = rawPointer;\n                    registeredInstance.$$.smartPtr = ptr;\n                    return registeredInstance[\"clone\"]();\n                } else {\n                    var rv = registeredInstance[\"clone\"]();\n                    this.destructor(ptr);\n                    return rv;\n                }\n            }\n            function makeDefaultHandle() {\n                if (this.isSmartPointer) return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this.pointeeType,\n                    ptr: rawPointer,\n                    smartPtrType: this,\n                    smartPtr: ptr\n                });\n                else return makeClassHandle(this.registeredClass.instancePrototype, {\n                    ptrType: this,\n                    ptr: ptr\n                });\n            }\n            var actualType = this.registeredClass.getActualType(rawPointer);\n            var registeredPointerRecord = registeredPointers[actualType];\n            if (!registeredPointerRecord) return makeDefaultHandle.call(this);\n            var toType;\n            if (this.isConst) toType = registeredPointerRecord.constPointerType;\n            else toType = registeredPointerRecord.pointerType;\n            var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n            if (dp === null) return makeDefaultHandle.call(this);\n            if (this.isSmartPointer) return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp,\n                smartPtrType: this,\n                smartPtr: ptr\n            });\n            else return makeClassHandle(toType.registeredClass.instancePrototype, {\n                ptrType: toType,\n                ptr: dp\n            });\n        }\n        function init_RegisteredPointer() {\n            RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n            RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n            RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n            RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n            RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n            RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n            this.name = name;\n            this.registeredClass = registeredClass;\n            this.isReference = isReference;\n            this.isConst = isConst;\n            this.isSmartPointer = isSmartPointer;\n            this.pointeeType = pointeeType;\n            this.sharingPolicy = sharingPolicy;\n            this.rawGetPointee = rawGetPointee;\n            this.rawConstructor = rawConstructor;\n            this.rawShare = rawShare;\n            this.rawDestructor = rawDestructor;\n            if (!isSmartPointer && registeredClass.baseClass === undefined) {\n                if (isConst) {\n                    this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n                    this.destructorFunction = null;\n                } else {\n                    this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n                    this.destructorFunction = null;\n                }\n            } else this[\"toWireType\"] = genericPointerToWireType;\n        }\n        function replacePublicSymbol(name, value, numArguments) {\n            if (!Module.hasOwnProperty(name)) throwInternalError(\"Replacing nonexistant public symbol\");\n            if (undefined !== Module[name].overloadTable && undefined !== numArguments) Module[name].overloadTable[numArguments] = value;\n            else {\n                Module[name] = value;\n                Module[name].argCount = numArguments;\n            }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n            var f = Module[\"dynCall_\" + sig];\n            return args && args.length ? f.apply(null, [\n                ptr\n            ].concat(args)) : f.call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n            if (sig.includes(\"j\")) return dynCallLegacy(sig, ptr, args);\n            return wasmTable.get(ptr).apply(null, args);\n        }\n        function getDynCaller(sig, ptr) {\n            var argCache = [];\n            return function() {\n                argCache.length = arguments.length;\n                for(var i = 0; i < arguments.length; i++)argCache[i] = arguments[i];\n                return dynCall(sig, ptr, argCache);\n            };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n            signature = readLatin1String(signature);\n            function makeDynCaller() {\n                if (signature.includes(\"j\")) return getDynCaller(signature, rawFunction);\n                return wasmTable.get(rawFunction);\n            }\n            var fp = makeDynCaller();\n            if (typeof fp !== \"function\") throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n            return fp;\n        }\n        var UnboundTypeError = undefined;\n        function getTypeName(type) {\n            var ptr = ___getTypeName(type);\n            var rv = readLatin1String(ptr);\n            _free(ptr);\n            return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n            var unboundTypes = [];\n            var seen = {};\n            function visit(type) {\n                if (seen[type]) return;\n                if (registeredTypes[type]) return;\n                if (typeDependencies[type]) {\n                    typeDependencies[type].forEach(visit);\n                    return;\n                }\n                unboundTypes.push(type);\n                seen[type] = true;\n            }\n            types.forEach(visit);\n            throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\n                \", \"\n            ]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n            name = readLatin1String(name);\n            getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n            if (upcast) upcast = embind__requireFunction(upcastSignature, upcast);\n            if (downcast) downcast = embind__requireFunction(downcastSignature, downcast);\n            rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n            var legalFunctionName = makeLegalFunctionName(name);\n            exposePublicSymbol(legalFunctionName, function() {\n                throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [\n                    baseClassRawType\n                ]);\n            });\n            whenDependentTypesAreResolved([\n                rawType,\n                rawPointerType,\n                rawConstPointerType\n            ], baseClassRawType ? [\n                baseClassRawType\n            ] : [], function(base) {\n                base = base[0];\n                var baseClass;\n                var basePrototype;\n                if (baseClassRawType) {\n                    baseClass = base.registeredClass;\n                    basePrototype = baseClass.instancePrototype;\n                } else basePrototype = ClassHandle.prototype;\n                var constructor = createNamedFunction(legalFunctionName, function() {\n                    if (Object.getPrototypeOf(this) !== instancePrototype) throw new BindingError(\"Use 'new' to construct \" + name);\n                    if (undefined === registeredClass.constructor_body) throw new BindingError(name + \" has no accessible constructor\");\n                    var body = registeredClass.constructor_body[arguments.length];\n                    if (undefined === body) throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n                    return body.apply(this, arguments);\n                });\n                var instancePrototype = Object.create(basePrototype, {\n                    constructor: {\n                        value: constructor\n                    }\n                });\n                constructor.prototype = instancePrototype;\n                var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n                var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n                var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n                var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n                registeredPointers[rawType] = {\n                    pointerType: pointerConverter,\n                    constPointerType: constPointerConverter\n                };\n                replacePublicSymbol(legalFunctionName, constructor);\n                return [\n                    referenceConverter,\n                    pointerConverter,\n                    constPointerConverter\n                ];\n            });\n        }\n        function heap32VectorToArray(count, firstElement) {\n            var array = [];\n            for(var i = 0; i < count; i++)array.push(HEAP32[(firstElement >> 2) + i]);\n            return array;\n        }\n        function runDestructors(destructors) {\n            while(destructors.length){\n                var ptr = destructors.pop();\n                var del = destructors.pop();\n                del(ptr);\n            }\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n            assert(argCount > 0);\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n            invoker = embind__requireFunction(invokerSignature, invoker);\n            var args = [\n                rawConstructor\n            ];\n            var destructors = [];\n            whenDependentTypesAreResolved([], [\n                rawClassType\n            ], function(classType) {\n                classType = classType[0];\n                var humanName = \"constructor \" + classType.name;\n                if (undefined === classType.registeredClass.constructor_body) classType.registeredClass.constructor_body = [];\n                if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n                classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n                    throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n                };\n                whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n                    classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                        if (arguments.length !== argCount - 1) throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                        destructors.length = 0;\n                        args.length = argCount;\n                        for(var i = 1; i < argCount; ++i)args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                        var ptr = invoker.apply(null, args);\n                        runDestructors(destructors);\n                        return argTypes[0][\"fromWireType\"](ptr);\n                    };\n                    return [];\n                });\n                return [];\n            });\n        }\n        function new_(constructor, argumentList) {\n            if (!(constructor instanceof Function)) throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n            var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n            dummy.prototype = constructor.prototype;\n            var obj = new dummy;\n            var r = constructor.apply(obj, argumentList);\n            return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n            var argCount = argTypes.length;\n            if (argCount < 2) throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n            var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n            var needsDestructorStack = false;\n            for(var i = 1; i < argTypes.length; ++i)if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n                needsDestructorStack = true;\n                break;\n            }\n            var returns = argTypes[0].name !== \"void\";\n            var argsList = \"\";\n            var argsListWired = \"\";\n            for(var i = 0; i < argCount - 2; ++i){\n                argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n                argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n            }\n            var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n            if (needsDestructorStack) invokerFnBody += \"var destructors = [];\\n\";\n            var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n            var args1 = [\n                \"throwBindingError\",\n                \"invoker\",\n                \"fn\",\n                \"runDestructors\",\n                \"retType\",\n                \"classParam\"\n            ];\n            var args2 = [\n                throwBindingError,\n                cppInvokerFunc,\n                cppTargetFunc,\n                runDestructors,\n                argTypes[0],\n                argTypes[1]\n            ];\n            if (isClassMethodFunc) invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n            for(var i = 0; i < argCount - 2; ++i){\n                invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n                args1.push(\"argType\" + i);\n                args2.push(argTypes[i + 2]);\n            }\n            if (isClassMethodFunc) argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n            invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n            if (needsDestructorStack) invokerFnBody += \"runDestructors(destructors);\\n\";\n            else for(var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i){\n                var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n                if (argTypes[i].destructorFunction !== null) {\n                    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                    args1.push(paramName + \"_dtor\");\n                    args2.push(argTypes[i].destructorFunction);\n                }\n            }\n            if (returns) invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n            invokerFnBody += \"}\\n\";\n            args1.push(invokerFnBody);\n            var invokerFunction = new_(Function, args1).apply(null, args2);\n            return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n            methodName = readLatin1String(methodName);\n            rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n            whenDependentTypesAreResolved([], [\n                rawClassType\n            ], function(classType) {\n                classType = classType[0];\n                var humanName = classType.name + \".\" + methodName;\n                if (isPureVirtual) classType.registeredClass.pureVirtualFunctions.push(methodName);\n                function unboundTypesHandler() {\n                    throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n                }\n                var proto = classType.registeredClass.instancePrototype;\n                var method = proto[methodName];\n                if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n                    unboundTypesHandler.argCount = argCount - 2;\n                    unboundTypesHandler.className = classType.name;\n                    proto[methodName] = unboundTypesHandler;\n                } else {\n                    ensureOverloadTable(proto, methodName, humanName);\n                    proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n                }\n                whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n                    var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n                    if (undefined === proto[methodName].overloadTable) {\n                        memberFunction.argCount = argCount - 2;\n                        proto[methodName] = memberFunction;\n                    } else proto[methodName].overloadTable[argCount - 2] = memberFunction;\n                    return [];\n                });\n                return [];\n            });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [\n            {},\n            {\n                value: undefined\n            },\n            {\n                value: null\n            },\n            {\n                value: true\n            },\n            {\n                value: false\n            }\n        ];\n        function __emval_decref(handle) {\n            if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n                emval_handle_array[handle] = undefined;\n                emval_free_list.push(handle);\n            }\n        }\n        function count_emval_handles() {\n            var count = 0;\n            for(var i = 5; i < emval_handle_array.length; ++i)if (emval_handle_array[i] !== undefined) ++count;\n            return count;\n        }\n        function get_first_emval() {\n            for(var i = 5; i < emval_handle_array.length; ++i){\n                if (emval_handle_array[i] !== undefined) return emval_handle_array[i];\n            }\n            return null;\n        }\n        function init_emval() {\n            Module[\"count_emval_handles\"] = count_emval_handles;\n            Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n            switch(value){\n                case undefined:\n                    return 1;\n                case null:\n                    return 2;\n                case true:\n                    return 3;\n                case false:\n                    return 4;\n                default:\n                    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n                    emval_handle_array[handle] = {\n                        refcount: 1,\n                        value: value\n                    };\n                    return handle;\n            }\n        }\n        function __embind_register_emval(rawType, name) {\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(handle) {\n                    var rv = emval_handle_array[handle].value;\n                    __emval_decref(handle);\n                    return rv;\n                },\n                \"toWireType\": function(destructors, value) {\n                    return __emval_register(value);\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: null\n            });\n        }\n        function _embind_repr(v) {\n            if (v === null) return \"null\";\n            var t = typeof v;\n            if (t === \"object\" || t === \"array\" || t === \"function\") return v.toString();\n            else return \"\" + v;\n        }\n        function floatReadValueFromPointer(name, shift) {\n            switch(shift){\n                case 2:\n                    return function(pointer) {\n                        return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n                    };\n                case 3:\n                    return function(pointer) {\n                        return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n                    };\n                default:\n                    throw new TypeError(\"Unknown float type: \" + name);\n            }\n        }\n        function __embind_register_float(rawType, name, size) {\n            var shift = getShiftFromSize(size);\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    return value;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (typeof value !== \"number\" && typeof value !== \"boolean\") throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n                    return value;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n                destructorFunction: null\n            });\n        }\n        function integerReadValueFromPointer(name, shift, signed) {\n            switch(shift){\n                case 0:\n                    return signed ? function readS8FromPointer(pointer) {\n                        return HEAP8[pointer];\n                    } : function readU8FromPointer(pointer) {\n                        return HEAPU8[pointer];\n                    };\n                case 1:\n                    return signed ? function readS16FromPointer(pointer) {\n                        return HEAP16[pointer >> 1];\n                    } : function readU16FromPointer(pointer) {\n                        return HEAPU16[pointer >> 1];\n                    };\n                case 2:\n                    return signed ? function readS32FromPointer(pointer) {\n                        return HEAP32[pointer >> 2];\n                    } : function readU32FromPointer(pointer) {\n                        return HEAPU32[pointer >> 2];\n                    };\n                default:\n                    throw new TypeError(\"Unknown integer type: \" + name);\n            }\n        }\n        function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n            name = readLatin1String(name);\n            if (maxRange === -1) maxRange = 4294967295;\n            var shift = getShiftFromSize(size);\n            var fromWireType = function(value) {\n                return value;\n            };\n            if (minRange === 0) {\n                var bitshift = 32 - 8 * size;\n                fromWireType = function(value) {\n                    return value << bitshift >>> bitshift;\n                };\n            }\n            var isUnsignedType = name.includes(\"unsigned\");\n            registerType(primitiveType, {\n                name: name,\n                \"fromWireType\": fromWireType,\n                \"toWireType\": function(destructors, value) {\n                    if (typeof value !== \"number\" && typeof value !== \"boolean\") throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n                    if (value < minRange || value > maxRange) throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n                    return isUnsignedType ? value >>> 0 : value | 0;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n                destructorFunction: null\n            });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n            var typeMapping = [\n                Int8Array,\n                Uint8Array,\n                Int16Array,\n                Uint16Array,\n                Int32Array,\n                Uint32Array,\n                Float32Array,\n                Float64Array\n            ];\n            var TA = typeMapping[dataTypeIndex];\n            function decodeMemoryView(handle) {\n                handle = handle >> 2;\n                var heap = HEAPU32;\n                var size = heap[handle];\n                var data = heap[handle + 1];\n                return new TA(buffer, data, size);\n            }\n            name = readLatin1String(name);\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": decodeMemoryView,\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": decodeMemoryView\n            }, {\n                ignoreDuplicateRegistrations: true\n            });\n        }\n        function __embind_register_std_string(rawType, name) {\n            name = readLatin1String(name);\n            var stdStringIsUTF8 = name === \"std::string\";\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    var length = HEAPU32[value >> 2];\n                    var str;\n                    if (stdStringIsUTF8) {\n                        var decodeStartPtr = value + 4;\n                        for(var i = 0; i <= length; ++i){\n                            var currentBytePtr = value + 4 + i;\n                            if (i == length || HEAPU8[currentBytePtr] == 0) {\n                                var maxRead = currentBytePtr - decodeStartPtr;\n                                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                                if (str === undefined) str = stringSegment;\n                                else {\n                                    str += String.fromCharCode(0);\n                                    str += stringSegment;\n                                }\n                                decodeStartPtr = currentBytePtr + 1;\n                            }\n                        }\n                    } else {\n                        var a = new Array(length);\n                        for(var i = 0; i < length; ++i)a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n                        str = a.join(\"\");\n                    }\n                    _free(value);\n                    return str;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (value instanceof ArrayBuffer) value = new Uint8Array(value);\n                    var getLength;\n                    var valueIsOfTypeString = typeof value === \"string\";\n                    if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) throwBindingError(\"Cannot pass non-string to std::string\");\n                    if (stdStringIsUTF8 && valueIsOfTypeString) getLength = function() {\n                        return lengthBytesUTF8(value);\n                    };\n                    else getLength = function() {\n                        return value.length;\n                    };\n                    var length = getLength();\n                    var ptr = _malloc(4 + length + 1);\n                    HEAPU32[ptr >> 2] = length;\n                    if (stdStringIsUTF8 && valueIsOfTypeString) stringToUTF8(value, ptr + 4, length + 1);\n                    else {\n                        if (valueIsOfTypeString) for(var i = 0; i < length; ++i){\n                            var charCode = value.charCodeAt(i);\n                            if (charCode > 255) {\n                                _free(ptr);\n                                throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                            }\n                            HEAPU8[ptr + 4 + i] = charCode;\n                        }\n                        else for(var i = 0; i < length; ++i)HEAPU8[ptr + 4 + i] = value[i];\n                    }\n                    if (destructors !== null) destructors.push(_free, ptr);\n                    return ptr;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function(ptr) {\n                    _free(ptr);\n                }\n            });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name) {\n            name = readLatin1String(name);\n            var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n            if (charSize === 2) {\n                decodeString = UTF16ToString;\n                encodeString = stringToUTF16;\n                lengthBytesUTF = lengthBytesUTF16;\n                getHeap = function() {\n                    return HEAPU16;\n                };\n                shift = 1;\n            } else if (charSize === 4) {\n                decodeString = UTF32ToString;\n                encodeString = stringToUTF32;\n                lengthBytesUTF = lengthBytesUTF32;\n                getHeap = function() {\n                    return HEAPU32;\n                };\n                shift = 2;\n            }\n            registerType(rawType, {\n                name: name,\n                \"fromWireType\": function(value) {\n                    var length = HEAPU32[value >> 2];\n                    var HEAP = getHeap();\n                    var str;\n                    var decodeStartPtr = value + 4;\n                    for(var i = 0; i <= length; ++i){\n                        var currentBytePtr = value + 4 + i * charSize;\n                        if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n                            var maxReadBytes = currentBytePtr - decodeStartPtr;\n                            var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                            if (str === undefined) str = stringSegment;\n                            else {\n                                str += String.fromCharCode(0);\n                                str += stringSegment;\n                            }\n                            decodeStartPtr = currentBytePtr + charSize;\n                        }\n                    }\n                    _free(value);\n                    return str;\n                },\n                \"toWireType\": function(destructors, value) {\n                    if (!(typeof value === \"string\")) throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n                    var length = lengthBytesUTF(value);\n                    var ptr = _malloc(4 + length + charSize);\n                    HEAPU32[ptr >> 2] = length >> shift;\n                    encodeString(value, ptr + 4, length + charSize);\n                    if (destructors !== null) destructors.push(_free, ptr);\n                    return ptr;\n                },\n                \"argPackAdvance\": 8,\n                \"readValueFromPointer\": simpleReadValueFromPointer,\n                destructorFunction: function(ptr) {\n                    _free(ptr);\n                }\n            });\n        }\n        function __embind_register_void(rawType, name) {\n            name = readLatin1String(name);\n            registerType(rawType, {\n                isVoid: true,\n                name: name,\n                \"argPackAdvance\": 0,\n                \"fromWireType\": function() {\n                    return undefined;\n                },\n                \"toWireType\": function(destructors, o) {\n                    return undefined;\n                }\n            });\n        }\n        function requireHandle(handle) {\n            if (!handle) throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n            return emval_handle_array[handle].value;\n        }\n        function requireRegisteredType(rawType, humanName) {\n            var impl = registeredTypes[rawType];\n            if (undefined === impl) throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n            return impl;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n            handle = requireHandle(handle);\n            returnType = requireRegisteredType(returnType, \"emval::as\");\n            var destructors = [];\n            var rd = __emval_register(destructors);\n            HEAP32[destructorsRef >> 2] = rd;\n            return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_get_property(handle, key) {\n            handle = requireHandle(handle);\n            key = requireHandle(key);\n            return __emval_register(handle[key]);\n        }\n        function __emval_run_destructors(handle) {\n            var destructors = emval_handle_array[handle].value;\n            runDestructors(destructors);\n            __emval_decref(handle);\n        }\n        function __emval_take_value(type, argv) {\n            type = requireRegisteredType(type, \"_emval_take_value\");\n            var v = type[\"readValueFromPointer\"](argv);\n            return __emval_register(v);\n        }\n        function _abort() {\n            abort();\n        }\n        function abortOnCannotGrowMemory(requestedSize) {\n            abort(\"OOM\");\n        }\n        function _emscripten_resize_heap(requestedSize) {\n            var oldSize = HEAPU8.length;\n            requestedSize = requestedSize >>> 0;\n            abortOnCannotGrowMemory(requestedSize);\n        }\n        var SYSCALLS = {\n            mappings: {},\n            buffers: [\n                null,\n                [],\n                []\n            ],\n            printChar: function(stream, curr) {\n                var buffer = SYSCALLS.buffers[stream];\n                if (curr === 0 || curr === 10) {\n                    (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n                    buffer.length = 0;\n                } else buffer.push(curr);\n            },\n            varargs: undefined,\n            get: function() {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret;\n            },\n            getStr: function(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n            },\n            get64: function(low, high) {\n                return low;\n            }\n        };\n        function _fd_close(fd) {\n            return 0;\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n        function _fd_write(fd, iov, iovcnt, pnum) {\n            var num = 0;\n            for(var i = 0; i < iovcnt; i++){\n                var ptr = HEAP32[iov + i * 8 >> 2];\n                var len = HEAP32[iov + (i * 8 + 4) >> 2];\n                for(var j = 0; j < len; j++)SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n                num += len;\n            }\n            HEAP32[pnum >> 2] = num;\n            return 0;\n        }\n        function _setTempRet0(val) {\n            setTempRet0(val);\n        }\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        var ASSERTIONS = false;\n        function intArrayToString(array) {\n            var ret = [];\n            for(var i = 0; i < array.length; i++){\n                var chr = array[i];\n                if (chr > 255) {\n                    if (ASSERTIONS) assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n                    chr &= 255;\n                }\n                ret.push(String.fromCharCode(chr));\n            }\n            return ret.join(\"\");\n        }\n        var decodeBase64 = typeof atob === \"function\" ? atob : function(input) {\n            var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n            var output = \"\";\n            var chr1, chr2, chr3;\n            var enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n            do {\n                enc1 = keyStr.indexOf(input.charAt(i++));\n                enc2 = keyStr.indexOf(input.charAt(i++));\n                enc3 = keyStr.indexOf(input.charAt(i++));\n                enc4 = keyStr.indexOf(input.charAt(i++));\n                chr1 = enc1 << 2 | enc2 >> 4;\n                chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n                chr3 = (enc3 & 3) << 6 | enc4;\n                output = output + String.fromCharCode(chr1);\n                if (enc3 !== 64) output = output + String.fromCharCode(chr2);\n                if (enc4 !== 64) output = output + String.fromCharCode(chr3);\n            }while (i < input.length);\n            return output;\n        };\n        function intArrayFromBase64(s) {\n            if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n                var buf;\n                try {\n                    buf = Buffer.from(s, \"base64\");\n                } catch (_) {\n                    buf = new Buffer(s, \"base64\");\n                }\n                return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n            }\n            try {\n                var decoded = decodeBase64(s);\n                var bytes = new Uint8Array(decoded.length);\n                for(var i = 0; i < decoded.length; ++i)bytes[i] = decoded.charCodeAt(i);\n                return bytes;\n            } catch (_) {\n                throw new Error(\"Converting base64 string to bytes failed.\");\n            }\n        }\n        function tryParseAsDataURI(filename) {\n            if (!isDataURI(filename)) return;\n            return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n        }\n        var asmLibraryArg = {\n            \"l\": __embind_register_bool,\n            \"f\": __embind_register_class,\n            \"d\": __embind_register_class_constructor,\n            \"a\": __embind_register_class_function,\n            \"u\": __embind_register_emval,\n            \"j\": __embind_register_float,\n            \"c\": __embind_register_integer,\n            \"b\": __embind_register_memory_view,\n            \"k\": __embind_register_std_string,\n            \"e\": __embind_register_std_wstring,\n            \"m\": __embind_register_void,\n            \"g\": __emval_as,\n            \"p\": __emval_decref,\n            \"v\": __emval_get_property,\n            \"n\": __emval_run_destructors,\n            \"o\": __emval_take_value,\n            \"h\": _abort,\n            \"s\": _emscripten_resize_heap,\n            \"t\": _fd_close,\n            \"q\": _fd_seek,\n            \"i\": _fd_write,\n            \"r\": _setTempRet0\n        };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n            return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"x\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n            return (_free = Module[\"_free\"] = Module[\"asm\"][\"y\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n            return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"A\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n            return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"B\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n            return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"C\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n            return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"D\"]).apply(null, arguments);\n        };\n        var calledRun;\n        function ExitStatus(status) {\n            this.name = \"ExitStatus\";\n            this.message = \"Program terminated with exit(\" + status + \")\";\n            this.status = status;\n        }\n        dependenciesFulfilled = function runCaller() {\n            if (!calledRun) run();\n            if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n        function run(args) {\n            args = args || arguments_;\n            if (runDependencies > 0) return;\n            preRun();\n            if (runDependencies > 0) return;\n            function doRun() {\n                if (calledRun) return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT) return;\n                initRuntime();\n                readyPromiseResolve(Module);\n                if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n                postRun();\n            }\n            if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function() {\n                    setTimeout(function() {\n                        Module[\"setStatus\"](\"\");\n                    }, 1);\n                    doRun();\n                }, 1);\n            } else doRun();\n        }\n        Module[\"run\"] = run;\n        if (Module[\"preInit\"]) {\n            if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [\n                Module[\"preInit\"]\n            ];\n            while(Module[\"preInit\"].length > 0)Module[\"preInit\"].pop()();\n        }\n        run();\n        return aubio.ready;\n    };\n}();\nmodule.exports = aubio;\n\n},{\"e6cba795caef07b7\":\"7pvoV\",\"aced69c8dfaa35e9\":\"7IBTP\",\"647d8d173dc78e\":\"fztek\",\"4bb428a4879a14c\":\"k85Lx\"}],\"7pvoV\":[function(require,module,exports) {\n// shim for using process in browser\nvar process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") cachedSetTimeout = setTimeout;\n        else cachedSetTimeout = defaultSetTimout;\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") cachedClearTimeout = clearTimeout;\n        else cachedClearTimeout = defaultClearTimeout;\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) return;\n    draining = false;\n    if (currentQueue.length) queue = currentQueue.concat(queue);\n    else queueIndex = -1;\n    if (queue.length) drainQueue();\n}\nfunction drainQueue() {\n    if (draining) return;\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nprocess.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) runTimeout(drainQueue);\n};\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nprocess.title = \"browser\";\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = \"\"; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function(name) {\n    return [];\n};\nprocess.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\nprocess.cwd = function() {\n    return \"/\";\n};\nprocess.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\nprocess.umask = function() {\n    return 0;\n};\n\n},{}],\"7IBTP\":[function(require,module,exports) {\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ \"use strict\";\nconst base64 = require(\"ce5249998143b152\");\nconst ieee754 = require(\"9f9d08cd85b04282\");\nconst customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        const arr = new Uint8Array(1);\n        const proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty(Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty(Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction createBuffer(length) {\n    if (length > K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return allocUnsafe(arg);\n    }\n    return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192 // not used by this implementation\n;\nfunction from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) return fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) return fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return Buffer.from(valueOf, encodingOrOffset, length);\n    const b = fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ Buffer.from = function(value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction alloc(size, fill, encoding) {\n    assertSize(size);\n    if (size <= 0) return createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    return createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ Buffer.alloc = function(size, fill, encoding) {\n    return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ Buffer.allocUnsafe = function(size) {\n    return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ Buffer.allocUnsafeSlow = function(size) {\n    return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    const length = byteLength(string, encoding) | 0;\n    let buf = createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : checked(array.length) | 0;\n    const buf = createBuffer(length);\n    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    let buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n}\nfunction fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n        const len = checked(obj.length) | 0;\n        const buf = createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) return createBuffer(0);\n        return fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return fromArrayLike(obj.data);\n}\nfunction checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\nBuffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\nBuffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return Buffer.alloc(0);\n    let i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    let pos = 0;\n    for(i = 0; i < list.length; ++i){\n        let buf = list[i];\n        if (isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) {\n                if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n                buf.copy(buffer, pos);\n            } else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n    let loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return utf8Slice(this, start, end);\n        case \"ascii\":\n            return asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return latin1Slice(this, start, end);\n        case \"base64\":\n            return base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(let i = 0; i < len; i += 2)swap(this, i, i + 1);\n    return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(let i = 0; i < len; i += 4){\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n    }\n    return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(let i = 0; i < len; i += 8){\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n    }\n    return this;\n};\nBuffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = exports.INSPECT_MAX_BYTES;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif (customInspectSymbol) Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) target = Buffer.from(target, target.offset, target.byteLength);\n    if (!Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if (numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    let i;\n    if (dir) {\n        let foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            let found = true;\n            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    let i;\n    for(i = 0; i < length; ++i){\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\nBuffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return base64.fromByteArray(buf);\n    else return base64.fromByteArray(buf.slice(start, end));\n}\nfunction utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while(i < end){\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for(let i = start; i < end; ++i)out += hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);\n    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);\n    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow\n    );\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) boundsError(offset, this.length - 8);\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);\n});\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n}\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E(sym, getMessage, Base) {\n    errors[sym] = class NodeError extends Base {\n        constructor(){\n            super();\n            Object.defineProperty(this, \"message\", {\n                value: getMessage.apply(this, arguments),\n                writable: true,\n                configurable: true\n            });\n            // Add the error code to the name to include it in the stack trace.\n            this.name = `${this.name} [${sym}]`;\n            // Access the stack to generate the error message including the error code\n            // from the name.\n            this.stack // eslint-disable-line no-unused-expressions\n            ;\n            // Reset the name to the actual name.\n            delete this.name;\n        }\n        get code() {\n            return sym;\n        }\n        set code(value) {\n            Object.defineProperty(this, \"code\", {\n                configurable: true,\n                enumerable: true,\n                value,\n                writable: true\n            });\n        }\n        toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n        }\n    };\n}\nE(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n    if (name) return `${name} is outside of buffer bounds`;\n    return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\nE(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\nE(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = addNumericalSeparator(String(input));\n    else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = addNumericalSeparator(received);\n        received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n}, RangeError);\nfunction addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;\n    return `${val.slice(0, i)}${res}`;\n}\n// CHECK FUNCTIONS\n// ===============\nfunction checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) boundsError(offset, buf.length - (byteLength + 1));\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength > 3) {\n            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        } else range = `>= ${min}${n} and <= ${max}${n}`;\n        throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    checkBounds(buf, offset, byteLength);\n}\nfunction validateNumber(value, name) {\n    if (typeof value !== \"number\") throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n        validateNumber(value, type);\n        throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n    if (length < 0) throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n// HELPER FUNCTIONS\n// ================\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace(INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for(let i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction asciiToBytes(str) {\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction base64ToBytes(str) {\n    return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n    let i;\n    for(i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = function() {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for(let i = 0; i < 16; ++i){\n        const i16 = i * 16;\n        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n}\n\n},{\"ce5249998143b152\":\"kjMfF\",\"9f9d08cd85b04282\":\"6mvbT\"}],\"kjMfF\":[function(require,module,exports) {\n\"use strict\";\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var i = 0, len = code.length; i < len; ++i){\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\nfunction encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push(tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n},{}],\"6mvbT\":[function(require,module,exports) {\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n},{}],\"fztek\":[function(require,module,exports) {\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar process = require(\"27174913d0407477\");\n\"use strict\";\nfunction assertPath(path) {\n    if (typeof path !== \"string\") throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path));\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n    var res = \"\";\n    var lastSegmentLength = 0;\n    var lastSlash = -1;\n    var dots = 0;\n    var code;\n    for(var i = 0; i <= path.length; ++i){\n        if (i < path.length) code = path.charCodeAt(i);\n        else if (code === 47 /*/*/ ) break;\n        else code = 47 /*/*/ ;\n        if (code === 47 /*/*/ ) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/  || res.charCodeAt(res.length - 2) !== 46 /*.*/ ) {\n                    if (res.length > 2) {\n                        var lastSlashIndex = res.lastIndexOf(\"/\");\n                        if (lastSlashIndex !== res.length - 1) {\n                            if (lastSlashIndex === -1) {\n                                res = \"\";\n                                lastSegmentLength = 0;\n                            } else {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    } else if (res.length === 2 || res.length === 1) {\n                        res = \"\";\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0) res += \"/..\";\n                    else res = \"..\";\n                    lastSegmentLength = 2;\n                }\n            } else {\n                if (res.length > 0) res += \"/\" + path.slice(lastSlash + 1, i);\n                else res = path.slice(lastSlash + 1, i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        } else if (code === 46 /*.*/  && dots !== -1) ++dots;\n        else dots = -1;\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    var dir = pathObject.dir || pathObject.root;\n    var base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\");\n    if (!dir) return base;\n    if (dir === pathObject.root) return dir + base;\n    return dir + sep + base;\n}\nvar posix = {\n    // path.resolve([from ...], to)\n    resolve: function resolve() {\n        var resolvedPath = \"\";\n        var resolvedAbsolute = false;\n        var cwd;\n        for(var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--){\n            var path;\n            if (i >= 0) path = arguments[i];\n            else {\n                if (cwd === undefined) cwd = process.cwd();\n                path = cwd;\n            }\n            assertPath(path);\n            // Skip empty entries\n            if (path.length === 0) continue;\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n        if (resolvedAbsolute) {\n            if (resolvedPath.length > 0) return \"/\" + resolvedPath;\n            else return \"/\";\n        } else if (resolvedPath.length > 0) return resolvedPath;\n        else return \".\";\n    },\n    normalize: function normalize(path) {\n        assertPath(path);\n        if (path.length === 0) return \".\";\n        var isAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/ ;\n        // Normalize the path\n        path = normalizeStringPosix(path, !isAbsolute);\n        if (path.length === 0 && !isAbsolute) path = \".\";\n        if (path.length > 0 && trailingSeparator) path += \"/\";\n        if (isAbsolute) return \"/\" + path;\n        return path;\n    },\n    isAbsolute: function isAbsolute(path) {\n        assertPath(path);\n        return path.length > 0 && path.charCodeAt(0) === 47 /*/*/ ;\n    },\n    join: function join() {\n        if (arguments.length === 0) return \".\";\n        var joined;\n        for(var i = 0; i < arguments.length; ++i){\n            var arg = arguments[i];\n            assertPath(arg);\n            if (arg.length > 0) {\n                if (joined === undefined) joined = arg;\n                else joined += \"/\" + arg;\n            }\n        }\n        if (joined === undefined) return \".\";\n        return posix.normalize(joined);\n    },\n    relative: function relative(from, to) {\n        assertPath(from);\n        assertPath(to);\n        if (from === to) return \"\";\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) return \"\";\n        // Trim any leading backslashes\n        var fromStart = 1;\n        for(; fromStart < from.length; ++fromStart){\n            if (from.charCodeAt(fromStart) !== 47 /*/*/ ) break;\n        }\n        var fromEnd = from.length;\n        var fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        var toStart = 1;\n        for(; toStart < to.length; ++toStart){\n            if (to.charCodeAt(toStart) !== 47 /*/*/ ) break;\n        }\n        var toEnd = to.length;\n        var toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        var length = fromLen < toLen ? fromLen : toLen;\n        var lastCommonSep = -1;\n        var i = 0;\n        for(; i <= length; ++i){\n            if (i === length) {\n                if (toLen > length) {\n                    if (to.charCodeAt(toStart + i) === 47 /*/*/ ) // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                    else if (i === 0) // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                } else if (fromLen > length) {\n                    if (from.charCodeAt(fromStart + i) === 47 /*/*/ ) // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                    else if (i === 0) // We get here if `to` is the root.\n                    // For example: from='/foo'; to='/'\n                    lastCommonSep = 0;\n                }\n                break;\n            }\n            var fromCode = from.charCodeAt(fromStart + i);\n            var toCode = to.charCodeAt(toStart + i);\n            if (fromCode !== toCode) break;\n            else if (fromCode === 47 /*/*/ ) lastCommonSep = i;\n        }\n        var out = \"\";\n        // Generate the relative path based on the path difference between `to`\n        // and `from`\n        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/ ) {\n            if (out.length === 0) out += \"..\";\n            else out += \"/..\";\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) return out + to.slice(toStart + lastCommonSep);\n        else {\n            toStart += lastCommonSep;\n            if (to.charCodeAt(toStart) === 47 /*/*/ ) ++toStart;\n            return to.slice(toStart);\n        }\n    },\n    _makeLong: function _makeLong(path) {\n        return path;\n    },\n    dirname: function dirname(path) {\n        assertPath(path);\n        if (path.length === 0) return \".\";\n        var code = path.charCodeAt(0);\n        var hasRoot = code === 47 /*/*/ ;\n        var end = -1;\n        var matchedSlash = true;\n        for(var i = path.length - 1; i >= 1; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            } else // We saw the first non-path separator\n            matchedSlash = false;\n        }\n        if (end === -1) return hasRoot ? \"/\" : \".\";\n        if (hasRoot && end === 1) return \"//\";\n        return path.slice(0, end);\n    },\n    basename: function basename(path, ext) {\n        if (ext !== undefined && typeof ext !== \"string\") throw new TypeError('\"ext\" argument must be a string');\n        assertPath(path);\n        var start = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext.length === path.length && ext === path) return \"\";\n            var extIdx = ext.length - 1;\n            var firstNonSlashEnd = -1;\n            for(i = path.length - 1; i >= 0; --i){\n                var code = path.charCodeAt(i);\n                if (code === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) // We matched the extension, so mark this as the end of our path\n                            // component\n                            end = i;\n                        } else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) end = firstNonSlashEnd;\n            else if (end === -1) end = path.length;\n            return path.slice(start, end);\n        } else {\n            for(i = path.length - 1; i >= 0; --i){\n                if (path.charCodeAt(i) === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else if (end === -1) {\n                    // We saw the first non-path separator, mark this as the end of our\n                    // path component\n                    matchedSlash = false;\n                    end = i + 1;\n                }\n            }\n            if (end === -1) return \"\";\n            return path.slice(start, end);\n        }\n    },\n    extname: function extname(path) {\n        assertPath(path);\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        for(var i = path.length - 1; i >= 0; --i){\n            var code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) return \"\";\n        return path.slice(startDot, end);\n    },\n    format: function format(pathObject) {\n        if (pathObject === null || typeof pathObject !== \"object\") throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n        return _format(\"/\", pathObject);\n    },\n    parse: function parse(path) {\n        assertPath(path);\n        var ret = {\n            root: \"\",\n            dir: \"\",\n            base: \"\",\n            ext: \"\",\n            name: \"\"\n        };\n        if (path.length === 0) return ret;\n        var code = path.charCodeAt(0);\n        var isAbsolute = code === 47 /*/*/ ;\n        var start;\n        if (isAbsolute) {\n            ret.root = \"/\";\n            start = 1;\n        } else start = 0;\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        // Get non-dir info\n        for(; i >= start; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n            if (end !== -1) {\n                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);\n                else ret.base = ret.name = path.slice(startPart, end);\n            }\n        } else {\n            if (startPart === 0 && isAbsolute) {\n                ret.name = path.slice(1, startDot);\n                ret.base = path.slice(1, end);\n            } else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n            }\n            ret.ext = path.slice(startDot, end);\n        }\n        if (startPart > 0) ret.dir = path.slice(0, startPart - 1);\n        else if (isAbsolute) ret.dir = \"/\";\n        return ret;\n    },\n    sep: \"/\",\n    delimiter: \":\",\n    win32: null,\n    posix: null\n};\nposix.posix = posix;\nmodule.exports = posix;\n\n},{\"27174913d0407477\":\"7pvoV\"}],\"k85Lx\":[function(require,module,exports) {\n\"use strict\";\n\n},{}],\"dPAKu\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createUseBuffer\", ()=>(0, _useBufferDefault.default));\nvar _useBuffer = require(\"./useBuffer\");\nvar _useBufferDefault = parcelHelpers.interopDefault(_useBuffer);\n\n},{\"./useBuffer\":\"byutS\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"byutS\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nconst createUseBuffer = (size)=>{\n    let buffer = new Float32Array(size);\n    return (slice)=>{\n        const sliceLength = slice.length;\n        const start = buffer.length - sliceLength;\n        for(let i = 0; i < start; i++)buffer[i] = buffer[sliceLength + i];\n        for(let i = 0; i < sliceLength; i++)buffer[start + i] = slice[i];\n        return buffer;\n    };\n};\nexports.default = createUseBuffer;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}]},[\"j3gF1\"], \"j3gF1\", \"parcelRequirec6d8\")\n\n//# sourceMappingURL=worklet.2afcde61.js.map\n","import { PitchWorkletParameters } from \"./types\";\nimport { createUseGetPitch, PITCH_METHODS } from \"./useGetPitch\";\n\ntype Parameters = { [key in PitchWorkletParameters]: Float32Array };\n\ntype Port = Float32Array[];\n\nexport class FrequencyMeterProcessor extends AudioWorkletProcessor {\n  useGetPitch = createUseGetPitch();\n\n  static get parameterDescriptors() {\n    return [\n      {\n        name: PitchWorkletParameters.method,\n        minValue: 0,\n        maxValue: PITCH_METHODS.length - 1,\n      },\n      { name: PitchWorkletParameters.fftSize },\n      { name: PitchWorkletParameters.hopSize },\n    ];\n  }\n\n  process(inputs: [Port], outputs: [Port], parameters: Parameters) {\n    const [input] = inputs;\n\n    if (!input || !input.length) {\n      return true;\n    }\n\n    const getPitch = this.useGetPitch({\n      method: parameters[PitchWorkletParameters.method][0],\n      bufferSize: parameters[PitchWorkletParameters.fftSize][0],\n      hopSize: parameters[PitchWorkletParameters.hopSize][0],\n      sampleRate,\n    });\n\n    if (!getPitch) {\n      return true;\n    }\n\n    const frequency = getPitch(input[0]);\n\n    outputs[0].forEach((channel) => {\n      for (let index in channel) {\n        channel[index] = frequency;\n      }\n    });\n\n    return true;\n  }\n}\n\ntry {\n  //@ts-ignore\n  registerProcessor(\"frequency-meter-processor\", FrequencyMeterProcessor);\n} catch (e) {}\n","export interface PitchParams {\n  method: number;\n  bufferSize: number;\n  hopSize: number;\n  sampleRate: number;\n}\n\nexport enum PitchWorkletParameters {\n  method = 'method',\n  fftSize = 'fftSize',\n  hopSize = 'hopSize',\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import aubio, { Aubio, Pitch } from \"aubiojs\";\nimport { createUseBuffer } from \"../lib\";\nimport type { PitchParams } from \"./types\";\n\nconst DEFAULT_FFT_SIZE = 1024;\n\nexport enum PitchMethod {\n  \"default\" = \"default\",\n  \"yin\" = \"yin\",\n  \"mcomb\" = \"mcomb\",\n  \"schmitt\" = \"schmitt\",\n  \"fcomb\" = \"fcomb\",\n  \"yinfft\" = \"yinfft\",\n  \"yinfast\" = \"yinfast\",\n  \"specacf\" = \"specacf\",\n}\n\nexport const PITCH_METHODS = Object.keys(PitchMethod) as unknown as Array<\n  keyof typeof PitchMethod\n>;\n\nexport const DEFAULT_PARAMS: PitchParams = {\n  method: 0,\n  bufferSize: DEFAULT_FFT_SIZE,\n  hopSize: DEFAULT_FFT_SIZE / 4,\n  sampleRate: 44100,\n};\n\ntype GetPitch = (slice: Float32Array) => number;\n\nexport const createUseGetPitch = () => {\n  const current: Partial<PitchParams> = {};\n\n  let Pitch: Aubio[\"Pitch\"];\n  aubio().then((instance) => {\n    Pitch = instance.Pitch;\n  });\n\n  let useBuffer: ReturnType<typeof createUseBuffer>;\n  let getPitch: GetPitch = () => -1;\n  return ({ method, bufferSize, hopSize, sampleRate }: PitchParams) => {\n    if (!Pitch) {\n      return null;\n    }\n    const newParams: PitchParams = {\n      method: method ?? 0,\n      bufferSize: bufferSize <= 0 ? DEFAULT_PARAMS.bufferSize : bufferSize,\n      hopSize: hopSize <= 0 ? DEFAULT_PARAMS.hopSize : hopSize,\n      sampleRate,\n    };\n    if (newParams.bufferSize !== current.bufferSize) {\n      useBuffer = createUseBuffer(newParams.bufferSize);\n    }\n\n    if (\n      newParams.method !== current.method ||\n      newParams.bufferSize !== current.bufferSize ||\n      newParams.hopSize !== current.hopSize\n    ) {\n      const method = PITCH_METHODS[newParams.method];\n      const pitchProcessor = new Pitch(\n        method,\n        newParams.bufferSize,\n        newParams.hopSize,\n        sampleRate,\n      );\n      getPitch = (slice) => {\n        const buffer = useBuffer(slice);\n        return pitchProcessor?.do(buffer) ?? 0;\n      };\n      Object.assign(current, newParams);\n    }\n    return getPitch;\n  };\n};\n","\nvar aubio = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(aubio) {\n  aubio = aubio || {};\n\nvar Module=typeof aubio!==\"undefined\"?aubio:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"w\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"z\"];addOnInit(Module[\"asm\"][\"x\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=function(handle){return handle};return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=function(handle){finalizationGroup.register(handle,handle.$$,handle.$$);return handle};detachFinalizer=function(handle){finalizationGroup.unregister(handle.$$)};return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return wasmTable.get(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return wasmTable.get(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);var args=[rawConstructor];var destructors=[];whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}destructors.length=0;args.length=argCount;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return __emval_register(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.includes(\"unsigned\");registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){abort()}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _setTempRet0(val){setTempRet0(val)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={\"l\":__embind_register_bool,\"f\":__embind_register_class,\"d\":__embind_register_class_constructor,\"a\":__embind_register_class_function,\"u\":__embind_register_emval,\"j\":__embind_register_float,\"c\":__embind_register_integer,\"b\":__embind_register_memory_view,\"k\":__embind_register_std_string,\"e\":__embind_register_std_wstring,\"m\":__embind_register_void,\"g\":__emval_as,\"p\":__emval_decref,\"v\":__emval_get_property,\"n\":__emval_run_destructors,\"o\":__emval_take_value,\"h\":_abort,\"s\":_emscripten_resize_heap,\"t\":_fd_close,\"q\":_fd_seek,\"i\":_fd_write,\"r\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return aubio.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = aubio;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return aubio; });\nelse if (typeof exports === 'object')\n  exports[\"aubio\"] = aubio;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","\"use strict\";","import createUseBuffer from \"./useBuffer\";\n\nexport { createUseBuffer };\n","const createUseBuffer = (size: number) => {\n  let buffer = new Float32Array(size);\n  return (slice: Float32Array) => {\n    const sliceLength = slice.length;\n    const start = buffer.length - sliceLength;\n    for (let i = 0; i < start; i++) {\n      buffer[i] = buffer[sliceLength + i];\n    }\n    for (let i = 0; i < sliceLength; i++) {\n      buffer[start + i] = slice[i];\n    }\n    return buffer;\n  };\n};\n\nexport default createUseBuffer;\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","parcelHelpers","defineInteropFlag","export","FrequencyMeterProcessor","_types","_useGetPitch","AudioWorkletProcessor","useGetPitch","createUseGetPitch","parameterDescriptors","PitchWorkletParameters","method","minValue","maxValue","PITCH_METHODS","fftSize","hopSize","process","inputs","outputs","parameters","input","getPitch","bufferSize","sampleRate","frequency","forEach","channel","index","registerProcessor","e","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","key","prototype","hasOwnProperty","enumerable","destName","PitchMethod","DEFAULT_PARAMS","_aubiojs","_aubiojsDefault","_lib","DEFAULT_FFT_SIZE","Pitch","useBuffer","current","then","instance","newParams","createUseBuffer","pitchProcessor","slice","buffer","do","assign","_scriptDir","__filename","Buffer","aubio","document","currentScript","src","undefined","path","readyPromiseResolve","readyPromiseReject","read_","readAsync","readBinary","nodeFS","nodePath","wasmBinary","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","wasmTable","calledRun","Promise","reject","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","importScripts","versions","node","scriptDirectory","dirname","__dirname","filename","binary","ret","tryParseAsDataURI","toString","Uint8Array","assert","replace","ex","ExitStatus","abort","read","f","data","intArrayToString","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","status","out","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","String","fromCharCode","u1","u2","ch","UTF16Decoder","UTF16ToString","ptr","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","charCodeAt","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","len","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","dataURIPrefix","isDataURI","startsWith","isFileURI","wasmBinaryFile","getBinary","file","callRuntimeCallbacks","callbacks","callback","shift","func","arg","getShiftFromSize","size","TypeError","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","create","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","type","Array","unregisteredTypes","registered","dt","push","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","$$","ptrType","registeredClass","finalizationGroup","detachFinalizer","releaseClassHandle","count","smartPtr","smartPtrType","rawDestructor","attachFinalizer","FinalizationGroup","iter","result","next","done","unregister","delayFunction","deletionQueue","flushPendingDeletes","pop","deleteScheduled","ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","apply","argCount","RegisteredClass","instancePrototype","baseClass","getActualType","upcast","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","registeredInstances","makeClassHandle","record","RegisteredPointer","pointeeType","rawGetPointee","destructorFunction","embind__requireFunction","signature","rawFunction","fp","makeDynCaller","includes","sig","argCache","dynCall","args","concat","UnboundTypeError","getTypeName","___getTypeName","rv","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","join","heap32VectorToArray","firstElement","array","runDestructors","del","emval_free_list","emval_handle_array","__emval_decref","refcount","v","t","requireHandle","requireRegisteredType","impl","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","chr","embind_init_charCodes","codes","other","leftClass","left","rightClass","right","preservePointerOnDelete","o","clone","getPrototypeOf","getPointee","destructor","toType","rawPointer","getBasestPointer","class_","makeDefaultHandle","registeredPointerRecord","constPointerType","pointerType","dp","downcastPointer","k","fn","decodeBase64","atob","chr1","chr2","chr3","enc1","enc2","enc3","enc4","keyStr","output","charAt","intArrayFromBase64","s","buf","from","_","decoded","bytes","asmLibraryArg","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","numArguments","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","argTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","className","memberFunction","craftInvokerFunction","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","new_","argumentList","dummy","r","floatReadValueFromPointer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","integerReadValueFromPointer","signed","dataTypeIndex","TA","typeMapping","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","maxRead","stringSegment","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","getLength","lengthBytesUTF8","u","_malloc","stringToUTF8Array","outIdx","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","isVoid","returnType","destructorsRef","rd","argv","requestedSize","fd","offset_low","offset_high","whence","newOffset","iov","iovcnt","pnum","num","j","val","createWasm","info","receiveInstance","module1","wasmMemory","unshift","removeRunDependency","clearInterval","receiveInstantiationResult","instantiateArrayBuffer","receiver","getBinaryPromise","fetch","credentials","catch","instantiate","reason","instantiateAsync","instantiateStreaming","run","preRun","addOnPreRun","setTimeout","doRun","postRun","addOnPostRun","runCaller","ready","cachedSetTimeout","cachedClearTimeout","currentQueue","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","runClearTimeout","marker","Item","noop","nextTick","title","browser","env","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","base64","ieee754","customInspectSymbol","Symbol","createBuffer","RangeError","setPrototypeOf","encodingOrOffset","allocUnsafe","fromString","string","encoding","isEncoding","byteLength","actual","write","isView","fromArrayView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","SharedArrayBuffer","valueOf","b","fromObject","isBuffer","checked","isArray","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","hexSliceLookupTable","utf8Slice","asciiSlice","Math","min","latin1Slice","fromByteArray","utf16leSlice","swap","n","m","bidirectionalIndexOf","arrayIndexOf","arr","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","checkOffset","offset","ext","checkInt","max","wrtBigUInt64LE","checkIntBI","lo","Number","BigInt","hi","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","foo","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","y","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","remaining","hexWrite","strLen","parsed","parseInt","blitBuffer","asciiToBytes","byteArray","utf16leToBytes","units","toJSON","_arr","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","writable","configurable","addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","split","dst","alphabet","table","i16","BufferBigIntNotDefined","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","isNaN","LN2","assertPath","JSON","stringify","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","toEnd","lastCommonSep","fromCode","_makeLong","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","root","parse","sep","delimiter","win32","_useBufferDefault","_useBuffer","sliceLength"],"version":3,"file":"worklet.2afcde61.js.map"}