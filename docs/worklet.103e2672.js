!function(e,t,r,s,n){var i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},f="function"==typeof i[s]&&i[s],o=f.cache||{},l="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);function u(t,r){if(!o[t]){if(!e[t]){var n="function"==typeof i[s]&&i[s];if(!r&&n)return n(t,!0);if(f)return f(t,!0);if(l&&"string"==typeof t)return l(t);var a=Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}d.resolve=function(r){var s=e[t][1][r];return null!=s?s:r},d.cache={};var h=o[t]=new u.Module(t);e[t][0].call(h.exports,d,h,h.exports,this)}return o[t].exports;function d(e){var t=d.resolve(e);return!1===t?{}:u(t)}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=o,u.parent=f,u.register=function(t,r){e[t]=[function(e,t){t.exports=r},{}]},Object.defineProperty(u,"root",{get:function(){return i[s]}}),i[s]=u;for(var a=0;a<t.length;a++)u(t[a]);if(r){var h=u(r);"object"==typeof exports&&"undefined"!=typeof module?module.exports=h:"function"==typeof define&&define.amd&&define(function(){return h})}}({iIcye:[function(e,t,r){var s=e("@parcel/transformer-js/src/esmodule-helpers.js");s.defineInteropFlag(r),s.export(r,"LimiterAudioWorkletProcessor",()=>u);var n=e("./constant-memory-deque"),i=e("./read-from-ring-buffer"),f=e("./write-to-ring-buffer");let o=Math.exp(-1/(.5*sampleRate)),l=(e,t,r,s)=>{let n=e[127];for(let i=0;i<128;i+=1){let f,l;let u=(r+i)%t.length,a=Math.abs(t[u]);if(null!==s){for(;s.size>0&&a>=Math.abs(t[s.first()]);)s.shift();(0===s.size||a<Math.abs(t[s.first()]))&&s.unshift(u);let e=(r+i+128)%t.length;s.last()===e&&s.pop();let n=s.last();f=Math.abs(t[n]),l=n<u?u-n+1:u+t.length-n+1}else f=a,l=1;let h=n-f;n<f?n-=h/l:n=f+o*h,e[i]=n}};class u extends AudioWorkletProcessor{static parameterDescriptors=[];_constantMemoryDeques;_delayBuffers;_envelopeBuffers;_writeOffset;constructor({channelCount:e,channelCountMode:t,numberOfInputs:r,numberOfOutputs:s,outputChannelCount:i,processorOptions:f}){let o="object"==typeof f&&null!==f&&"attack"in f?f.attack:0;if("number"!=typeof o)throw Error('The attack needs to be of type "number".');if(o<0)throw Error("The attack can't be negative.");if("explicit"!==t)throw Error('The channelCountMode needs to be "explicit".');if(1!==r)throw Error("The numberOfInputs must be 1.");if(1!==s)throw Error("The numberOfOutputs must be 1.");if(void 0===i||e!==i[0])throw Error("The channelCount must be the same as the outputChannelCount of the first output.");super();let l=Math.round(sampleRate*o),u=l+128;this._constantMemoryDeques=0===l?null:Array.from({length:e},()=>new n.ConstantMemoryDeque(new Uint16Array(l+1))),this._delayBuffers=Array.from({length:e},()=>new Float32Array(u)),this._envelopeBuffers=Array.from({length:e},()=>new Float32Array(128)),this._writeOffset=0}process([e],[t]){let r=e.length,s=this._writeOffset;for(let n=0;n<r;n+=1){let r=null===this._constantMemoryDeques?null:this._constantMemoryDeques[n],o=this._delayBuffers[n],u=this._envelopeBuffers[n],a=e[n],h=t[n];this._writeOffset=(0,f.writeToRingBuffer)(o,a,s),l(u,o,s,r),(0,i.readFromRingBuffer)(o,h,this._writeOffset);for(let e=0;e<128;e+=1){let t=Math.min(1,1/u[e]);h[e]*=t}}return!0}}try{registerProcessor("limiter-processor",u)}catch(e){}},{"./constant-memory-deque":"6wWFN","./read-from-ring-buffer":"dXBr0","./write-to-ring-buffer":"3hS4Y","@parcel/transformer-js/src/esmodule-helpers.js":"5zHCx"}],"6wWFN":[function(e,t,r){var s=e("@parcel/transformer-js/src/esmodule-helpers.js");s.defineInteropFlag(r),s.export(r,"ConstantMemoryDeque",()=>n);class n{_buffer;_firstIndex;_isEmpty;_lastIndex;constructor(e){if(this._buffer=e,this._firstIndex=0,this._isEmpty=!0,this._lastIndex=0,0===this._buffer.length)throw Error("The given buffer is too small.")}get size(){return this._isEmpty?0:this._lastIndex<this._firstIndex?this._buffer.length-this._firstIndex+this._lastIndex+1:this._lastIndex-this._firstIndex+1}first(){return this._throwIfEmpty(),this._buffer[this._firstIndex]}last(){return this._throwIfEmpty(),this._buffer[this._lastIndex]}pop(){this._throwIfEmpty(),this._firstIndex===this._lastIndex?this._isEmpty=!0:this._lastIndex=this._decrementIndex(this._lastIndex)}shift(){this._throwIfEmpty(),this._firstIndex===this._lastIndex?this._isEmpty=!0:this._firstIndex=this._incrementIndex(this._firstIndex)}unshift(e){if(this._isEmpty)this._buffer[this._firstIndex]=e,this._isEmpty=!1;else{let t=this._decrementIndex(this._firstIndex);if(t===this._lastIndex)throw Error("Deque is full.");this._buffer[t]=e,this._firstIndex=t}}_decrementIndex(e){return 0===e?this._buffer.length-1:e-1}_incrementIndex(e){return(e+1)%this._buffer.length}_throwIfEmpty(){if(this._isEmpty)throw Error("Deque is empty.")}}},{"@parcel/transformer-js/src/esmodule-helpers.js":"5zHCx"}],"5zHCx":[function(e,t,r){r.interopDefault=function(e){return e&&e.__esModule?e:{default:e}},r.defineInteropFlag=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.exportAll=function(e,t){return Object.keys(e).forEach(function(r){"default"===r||"__esModule"===r||Object.prototype.hasOwnProperty.call(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:function(){return e[r]}})}),t},r.export=function(e,t,r){Object.defineProperty(e,t,{enumerable:!0,get:r})}},{}],dXBr0:[function(e,t,r){var s=e("@parcel/transformer-js/src/esmodule-helpers.js");s.defineInteropFlag(r),s.export(r,"readFromRingBuffer",()=>n);let n=(e,t,r)=>{let s=r+t.length;if(s<=e.length)return t.set(new Float32Array(e.buffer,e.byteOffset+r*t.BYTES_PER_ELEMENT,t.length)),s===e.length?0:s;let n=s-e.length,i=e.length-r;return t.set(new Float32Array(e.buffer,e.byteOffset+r*t.BYTES_PER_ELEMENT,i)),t.set(new Float32Array(e.buffer,e.byteOffset,n),i),n}},{"@parcel/transformer-js/src/esmodule-helpers.js":"5zHCx"}],"3hS4Y":[function(e,t,r){var s=e("@parcel/transformer-js/src/esmodule-helpers.js");s.defineInteropFlag(r),s.export(r,"writeToRingBuffer",()=>n);let n=(e,t,r)=>{let s=r+t.length;if(s<=e.length)return e.set(t,r),s===e.length?0:s;let n=s-e.length,i=e.length-r;return e.set(new Float32Array(t.buffer,t.byteOffset,i),r),e.set(new Float32Array(t.buffer,t.byteOffset+i*t.BYTES_PER_ELEMENT,n)),n}},{"@parcel/transformer-js/src/esmodule-helpers.js":"5zHCx"}]},["iIcye"],"iIcye","parcelRequirec6d8");
//# sourceMappingURL=worklet.103e2672.js.map
