{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,Q,C,S,C,C,C,C,C,MCYI,EACA,E,I,E,E,kDAbJ,EAAA,EAAA,gB,E,E,c,C,GACA,EAAA,EAAA,WAcA,IAAM,EAAiB,CACrB,IAAK,GACL,IAAK,EACL,WAAY,GACZ,WAAY,GACZ,eAAgB,EAChB,SAAU,UACV,WAAY,UACZ,WAAY,OACZ,YAAa,OACb,OAAQ,EAAE,CACV,KAAM,CACJ,MAAO,IACP,OAAQ,GACT,CACF,EAEG,EAAyD,CAC3D,GAAG,CAAc,AAClB,EAEG,EAAqE,CAAA,EAErE,EAA8B,KAElC,SAAS,EAAiB,CAAe,EACvC,OAAO,EAAW,KAAK,EAAE,CAAI,GAC/B,CAEA,IAAM,EAAa,AAAC,GAClB,AAAA,CAAA,EAAA,EAAA,OAAA,AAAA,EAAM,EAAO,EAAO,GAAG,EAAI,EAAG,EAAO,GAAG,EAAI,EAAG,EA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","sources":["<anon>","packages/base-nodes/src/Gauge/renderer.worker.ts","packages/base-nodes/src/lib/scale.ts","node_modules/.pnpm/@parcel+transformer-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.13_/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","packages/base-nodes/src/Gauge/types.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"8DXOK\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nvar _scale = require(\"../lib/scale\");\nvar _scaleDefault = parcelHelpers.interopDefault(_scale);\nvar _types = require(\"./types\");\n//scope variables\nlet canvas;\nlet canvasContext;\nconst DEFAULT_CONFIG = {\n    min: -1,\n    max: 1,\n    majorTicks: 10,\n    minorTicks: 50,\n    labelsInterval: 5,\n    arcColor: \"#f0f0f0\",\n    arrowColor: \"#4caf50\",\n    ticksColor: \"#333\",\n    labelsColor: \"#333\",\n    labels: [],\n    size: {\n        width: 300,\n        height: 150\n    }\n};\nlet config = {\n    ...DEFAULT_CONFIG\n};\nlet labels = {};\nlet currentValue = null;\nfunction degreesToRadians(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst scaleValue = (value)=>(0, _scaleDefault.default)(value, config.min ?? 0, config.max ?? 1, 0, 1);\nconst getValueLabel = (value)=>{\n    const label = labels[value];\n    if (label?.label) return label.label;\n    const text = value % 1 === 0 ? value.toString() : value.toFixed(2);\n    return text;\n};\nconst getValueColor = (value)=>labels[value]?.color || config.labelsColor || DEFAULT_CONFIG.labelsColor;\nconst drawBackgroundArc = (centerX, centerY, radius)=>{\n    const startArcAngle = degreesToRadians(180);\n    const endArcAngle = degreesToRadians(360);\n    canvasContext.beginPath();\n    canvasContext.arc(centerX, centerY, radius, startArcAngle, endArcAngle);\n    canvasContext.fillStyle = config.arcColor || DEFAULT_CONFIG.arcColor;\n    canvasContext.fill();\n    canvasContext.closePath();\n};\nconst drawGaugeLine = (centerX, height, radius, value, maxValue)=>{\n    const endAngle = degreesToRadians(180) + value / maxValue * degreesToRadians(180);\n    const lineStartX = centerX + radius * Math.cos(endAngle);\n    const lineStartY = height + radius * Math.sin(endAngle);\n    canvasContext.beginPath();\n    canvasContext.moveTo(centerX, height);\n    canvasContext.lineTo(lineStartX, lineStartY);\n    canvasContext.lineWidth = 2;\n    canvasContext.strokeStyle = config.arrowColor || DEFAULT_CONFIG.arrowColor;\n    canvasContext.stroke();\n    canvasContext.closePath();\n};\nconst drawTicks = (centerX, height, radius, numTicks, tickLength, tickInterval)=>{\n    const minValue = config.min ?? DEFAULT_CONFIG.min;\n    const maxValue = config.max ?? DEFAULT_CONFIG.max;\n    const startArcAngle = degreesToRadians(180);\n    const endArcAngle = degreesToRadians(360);\n    for(let i = 0; i <= numTicks; i++){\n        const tickAngle = startArcAngle + i / numTicks * (endArcAngle - startArcAngle);\n        const tickStartX = centerX + radius * Math.cos(tickAngle);\n        const tickStartY = height + radius * Math.sin(tickAngle);\n        const tickEndX = centerX + (radius - tickLength) * Math.cos(tickAngle);\n        const tickEndY = height + (radius - tickLength) * Math.sin(tickAngle);\n        canvasContext.beginPath();\n        canvasContext.moveTo(tickStartX, tickStartY);\n        canvasContext.lineTo(tickEndX, tickEndY);\n        canvasContext.lineWidth = 2;\n        canvasContext.strokeStyle = config.ticksColor || DEFAULT_CONFIG.ticksColor;\n        canvasContext.stroke();\n        canvasContext.closePath();\n        // Render tick values\n        if (i % tickInterval === 0) {\n            const range = maxValue - minValue;\n            const tickValue = range / numTicks * i + minValue;\n            const textX = centerX + (radius - tickLength - 30) * Math.cos(tickAngle);\n            const yPos = i === 0 || i === numTicks ? height - 8 : height;\n            const textY = yPos + (radius - tickLength - 30) * Math.sin(tickAngle);\n            canvasContext.font = \"18px Arial\";\n            canvasContext.fillStyle = getValueColor(tickValue);\n            canvasContext.textAlign = \"center\";\n            canvasContext.textBaseline = \"middle\";\n            canvasContext.fillText(getValueLabel(tickValue), textX, textY);\n        }\n    }\n};\nconst drawText = (centerX, height, value)=>{\n    canvasContext.beginPath();\n    canvasContext.arc(centerX, height, 30, degreesToRadians(180), degreesToRadians(360));\n    canvasContext.fillStyle = config.arcColor || DEFAULT_CONFIG.arcColor;\n    canvasContext.fill();\n    canvasContext.closePath();\n    canvasContext.font = \"18px Arial\";\n    canvasContext.fillStyle = getValueColor(value);\n    canvasContext.textAlign = \"center\";\n    canvasContext.textBaseline = \"middle\";\n    canvasContext.fillText(getValueLabel(value), centerX, height - 10);\n};\nconst drawGauge = ()=>{\n    const canvas = canvasContext.canvas;\n    const { width, height } = canvas;\n    const centerX = width / 2;\n    const radius = height - 10;\n    const maxValue = 1;\n    canvasContext.clearRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n    drawBackgroundArc(centerX, height, radius);\n    //minor ticks\n    drawTicks(centerX, height, radius, config.minorTicks, 5, config.labelsInterval);\n    //major ticks\n    drawTicks(centerX, height, radius, config.majorTicks, 10, 0);\n    if (currentValue !== null) {\n        drawGaugeLine(centerX, height, radius, scaleValue(currentValue), maxValue);\n        drawText(centerX, height, currentValue);\n    }\n};\nconst render = ()=>{\n    if (!canvasContext) {\n        requestAnimationFrame(render);\n        return;\n    }\n    drawGauge();\n    requestAnimationFrame(render);\n};\n//event handling\nonmessage = function({ data }) {\n    if (data.name === (0, _types.WorkerEventNames).INIT) {\n        canvas = data.canvas;\n        if (config.size) {\n            canvas.width = config.size?.width * 2;\n            canvas.height = config.size?.height * 2;\n        }\n        canvasContext = canvas.getContext(\"2d\");\n        data.port.onmessage = ({ data })=>{\n            data.forEach((val)=>{\n                currentValue = val;\n            });\n        };\n        requestAnimationFrame(render);\n    }\n    if (data.name === (0, _types.WorkerEventNames).SET_CONFIG) {\n        config = {\n            ...config,\n            ...data.config\n        };\n        labels = config.labels.reduce((acc, item)=>{\n            if (typeof item.value === \"undefined\") return acc;\n            return {\n                ...acc,\n                [item.value]: item\n            };\n        }, {});\n    }\n};\n\n},{\"../lib/scale\":\"9v9Uw\",\"./types\":\"dipEp\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"9v9Uw\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nconst scale = (input, inMin, inMax, outMin, outMax)=>{\n    const clampedInput = Math.max(Math.min(input, inMax), inMin);\n    const normalized = (clampedInput - inMin) / (inMax - inMin);\n    const output = normalized * (outMax - outMin) + outMin;\n    return output;\n};\nexports.default = scale;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}],\"4w0m1\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}],\"dipEp\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"WorkerEventNames\", ()=>WorkerEventNames);\nvar WorkerEventNames;\n(function(WorkerEventNames) {\n    WorkerEventNames[\"INIT\"] = \"INIT\";\n    WorkerEventNames[\"SET_CONFIG\"] = \"SET_CONFIG\";\n})(WorkerEventNames || (WorkerEventNames = {}));\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4w0m1\"}]},[\"8DXOK\"], \"8DXOK\", \"parcelRequirec6d8\")\n\n//# sourceMappingURL=renderer.worker.5f149a48.js.map\n","import scale from \"../lib/scale\";\nimport {\n  GaugeEventData,\n  InitEvent,\n  WorkerEventNames,\n  GaugeConfig,\n  SetConfigEvent,\n} from \"./types\";\n\ntype WorkerEvent = MessageEvent<InitEvent | SetConfigEvent>;\n\n//scope variables\nlet canvas: any;\nlet canvasContext: CanvasRenderingContext2D;\n\nconst DEFAULT_CONFIG = {\n  min: -1,\n  max: 1,\n  majorTicks: 10,\n  minorTicks: 50,\n  labelsInterval: 5,\n  arcColor: \"#f0f0f0\",\n  arrowColor: \"#4caf50\",\n  ticksColor: \"#333\",\n  labelsColor: \"#333\",\n  labels: [],\n  size: {\n    width: 300,\n    height: 150,\n  },\n};\n\nlet config: Required<Omit<GaugeConfig, \"backgroundColor\">> = {\n  ...DEFAULT_CONFIG,\n};\n\nlet labels: Record<number, NonNullable<GaugeConfig[\"labels\"]>[number]> = {};\n\nlet currentValue: number | null = null;\n\nfunction degreesToRadians(degrees: number): number {\n  return (degrees * Math.PI) / 180;\n}\n\nconst scaleValue = (value: number) =>\n  scale(value, config.min ?? 0, config.max ?? 1, 0, 1);\n\nconst getValueLabel = (value: number) => {\n  const label = labels[value];\n  if (label?.label) {\n    return label.label;\n  }\n  const text = value % 1 === 0 ? value.toString() : value.toFixed(2);\n  return text;\n};\n\nconst getValueColor = (value: number) =>\n  labels[value]?.color || config.labelsColor || DEFAULT_CONFIG.labelsColor;\n\nconst drawBackgroundArc = (\n  centerX: number,\n  centerY: number,\n  radius: number,\n) => {\n  const startArcAngle = degreesToRadians(180);\n  const endArcAngle = degreesToRadians(360);\n\n  canvasContext.beginPath();\n  canvasContext.arc(centerX, centerY, radius, startArcAngle, endArcAngle);\n  canvasContext.fillStyle = config.arcColor || DEFAULT_CONFIG.arcColor;\n  canvasContext.fill();\n  canvasContext.closePath();\n};\n\nconst drawGaugeLine = (\n  centerX: number,\n  height: number,\n  radius: number,\n  value: number,\n  maxValue: number,\n) => {\n  const endAngle =\n    degreesToRadians(180) + (value / maxValue) * degreesToRadians(180);\n  const lineStartX = centerX + radius * Math.cos(endAngle);\n  const lineStartY = height + radius * Math.sin(endAngle);\n\n  canvasContext.beginPath();\n  canvasContext.moveTo(centerX, height);\n  canvasContext.lineTo(lineStartX, lineStartY);\n  canvasContext.lineWidth = 2;\n  canvasContext.strokeStyle = config.arrowColor || DEFAULT_CONFIG.arrowColor;\n  canvasContext.stroke();\n  canvasContext.closePath();\n};\n\nconst drawTicks = (\n  centerX: number,\n  height: number,\n  radius: number,\n  numTicks: number,\n  tickLength: number,\n  tickInterval: number,\n) => {\n  const minValue = config.min ?? DEFAULT_CONFIG.min;\n  const maxValue = config.max ?? DEFAULT_CONFIG.max;\n\n  const startArcAngle = degreesToRadians(180);\n  const endArcAngle = degreesToRadians(360);\n\n  for (let i = 0; i <= numTicks; i++) {\n    const tickAngle =\n      startArcAngle + (i / numTicks) * (endArcAngle - startArcAngle);\n    const tickStartX = centerX + radius * Math.cos(tickAngle);\n    const tickStartY = height + radius * Math.sin(tickAngle);\n    const tickEndX = centerX + (radius - tickLength) * Math.cos(tickAngle);\n    const tickEndY = height + (radius - tickLength) * Math.sin(tickAngle);\n\n    canvasContext.beginPath();\n    canvasContext.moveTo(tickStartX, tickStartY);\n    canvasContext.lineTo(tickEndX, tickEndY);\n    canvasContext.lineWidth = 2;\n    canvasContext.strokeStyle = config.ticksColor || DEFAULT_CONFIG.ticksColor;\n    canvasContext.stroke();\n    canvasContext.closePath();\n\n    // Render tick values\n    if (i % tickInterval === 0) {\n      const range = maxValue - minValue;\n      const tickValue = (range / numTicks) * i + minValue;\n      const textX = centerX + (radius - tickLength - 30) * Math.cos(tickAngle);\n      const yPos = i === 0 || i === numTicks ? height - 8 : height;\n      const textY = yPos + (radius - tickLength - 30) * Math.sin(tickAngle);\n\n      canvasContext.font = \"18px Arial\";\n      canvasContext.fillStyle = getValueColor(tickValue);\n      canvasContext.textAlign = \"center\";\n      canvasContext.textBaseline = \"middle\";\n      canvasContext.fillText(getValueLabel(tickValue), textX, textY);\n    }\n  }\n};\n\nconst drawText = (\n  centerX: number,\n  height: number,\n  value: number,\n  // color: string = config.labelsColor || DEFAULT_CONFIG.labelsColor,\n) => {\n  canvasContext.beginPath();\n  canvasContext.arc(\n    centerX,\n    height,\n    30,\n    degreesToRadians(180),\n    degreesToRadians(360),\n  );\n  canvasContext.fillStyle = config.arcColor || DEFAULT_CONFIG.arcColor;\n  canvasContext.fill();\n  canvasContext.closePath();\n\n  canvasContext.font = \"18px Arial\";\n  canvasContext.fillStyle = getValueColor(value);\n  canvasContext.textAlign = \"center\";\n  canvasContext.textBaseline = \"middle\";\n  canvasContext.fillText(getValueLabel(value), centerX, height - 10);\n};\n\nconst drawGauge = () => {\n  const canvas = canvasContext.canvas;\n  const { width, height } = canvas;\n\n  const centerX = width / 2;\n  const radius = height - 10;\n  const maxValue = 1;\n\n  canvasContext.clearRect(\n    0,\n    0,\n    canvasContext.canvas.width,\n    canvasContext.canvas.height,\n  );\n\n  drawBackgroundArc(centerX, height, radius);\n  //minor ticks\n  drawTicks(\n    centerX,\n    height,\n    radius,\n    config.minorTicks,\n    5,\n    config.labelsInterval,\n  );\n  //major ticks\n  drawTicks(centerX, height, radius, config.majorTicks, 10, 0);\n\n  if (currentValue !== null) {\n    drawGaugeLine(centerX, height, radius, scaleValue(currentValue), maxValue);\n    drawText(centerX, height, currentValue);\n  }\n};\n\nconst render = () => {\n  if (!canvasContext) {\n    requestAnimationFrame(render);\n    return;\n  }\n\n  drawGauge();\n\n  requestAnimationFrame(render);\n};\n\n//event handling\nonmessage = function ({ data }: WorkerEvent) {\n  if (data.name === WorkerEventNames.INIT) {\n    canvas = data.canvas;\n\n    if (config.size) {\n      canvas.width = config.size?.width * 2;\n      canvas.height = config.size?.height * 2;\n    }\n\n    canvasContext = canvas.getContext(\"2d\");\n\n    data.port.onmessage = ({ data }: { data: GaugeEventData }) => {\n      data.forEach((val) => {\n        currentValue = val;\n      });\n    };\n    requestAnimationFrame(render);\n  }\n  if (data.name === WorkerEventNames.SET_CONFIG) {\n    config = { ...config, ...data.config };\n    labels = config.labels.reduce(\n      (acc, item) => {\n        if (typeof item.value === \"undefined\") {\n          return acc;\n        }\n        return { ...acc, [item.value]: item };\n      },\n      {} as typeof labels,\n    );\n  }\n};\n","const scale = (\n  input: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number\n): number => {\n  const clampedInput = Math.max(Math.min(input, inMax), inMin);\n  const normalized = (clampedInput - inMin) / (inMax - inMin);\n  const output = normalized * (outMax - outMin) + outMin;\n\n  return output;\n};\n\nexport default scale;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { WNNodeProps, WNNodeData } from \"@web-noise/core\";\n\nexport enum WorkerEventNames {\n  INIT = \"INIT\",\n  SET_CONFIG = \"SET_CONFIG\",\n}\n\nexport interface InitEvent {\n  name: WorkerEventNames.INIT;\n  canvas: OffscreenCanvas;\n  port: MessagePort;\n}\n\nexport interface SetConfigEvent {\n  name: WorkerEventNames.SET_CONFIG;\n  config: GaugeConfig;\n}\n\nexport type GaugeEventData = Float32Array;\n\nexport interface GaugeColors {\n  arc?: string;\n  arrow?: string;\n  ticks?: string;\n  labels?: string;\n}\n\nexport interface GaugeValues {}\n\nexport interface GaugeConfig {\n  backgroundColor?: string;\n  arcColor?: string;\n  arrowColor?: string;\n  ticksColor?: string;\n  labelsColor?: string;\n  min?: number;\n  max?: number;\n  majorTicks?: number;\n  minorTicks?: number;\n  labelsInterval?: number;\n  labels?: Array<{\n    value?: number;\n    label?: string;\n    color?: string;\n  }>;\n  size?: { width: number; height: number };\n}\n\nexport type GaugeData = WNNodeData<GaugeValues, GaugeConfig>;\n\nexport interface GaugeProps extends WNNodeProps<GaugeData> {}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","canvas","canvasContext","parcelHelpers","_scale","_scaleDefault","interopDefault","_types","DEFAULT_CONFIG","min","max","majorTicks","minorTicks","labelsInterval","arcColor","arrowColor","ticksColor","labelsColor","labels","size","width","height","config","currentValue","degreesToRadians","degrees","Math","PI","scaleValue","value","default","getValueLabel","label","toString","toFixed","getValueColor","color","drawBackgroundArc","centerX","centerY","radius","startArcAngle","endArcAngle","beginPath","arc","fillStyle","fill","closePath","drawGaugeLine","maxValue","endAngle","lineStartX","cos","lineStartY","sin","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawTicks","numTicks","tickLength","tickInterval","minValue","tickAngle","tickStartX","tickStartY","tickEndX","tickEndY","tickValue","range","textX","textY","yPos","font","textAlign","textBaseline","fillText","drawText","drawGauge","clearRect","render","requestAnimationFrame","onmessage","data","WorkerEventNames","INIT","getContext","port","forEach","val","SET_CONFIG","reduce","acc","item","defineInteropFlag","input","inMin","inMax","outMin","outMax","normalized","clampedInput","a","__esModule","exportAll","source","dest","keys","key","prototype","hasOwnProperty","enumerable","export","destName"],"version":3,"file":"renderer.worker.5f149a48.js.map"}